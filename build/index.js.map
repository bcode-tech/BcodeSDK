{"version":3,"file":"index.js","sources":["../src/common/logger.ts","../src/common/utils.ts","../src/common/abis/PablockNFT.ts","../src/common/constants.ts","../src/common/abis/CustomERC20.ts","../src/common/abis/PablockToken.ts","../src/config.ts","../src/modules/hash.ts","../src/modules/qrcode.ts","../src/index.ts"],"sourcesContent":["import winston from \"winston\";\n\nconst { createLogger, format, transports } = require(\"winston\");\n\n/**\n * Define the log format\n */\nconst logFormat = format.combine(\n  format.timestamp(),\n  format.printf(({ level, message, timestamp }) => {\n    // return `[${timestamp}] [${level}] - ${message}`;\n    return `[${level}] - ${message}`;\n  })\n);\n\n/**\n * Logger configuration\n */\nexport const logger = createLogger({\n  level: \"debug\",\n  format: logFormat,\n  transports: [\n    //\n    // - Write all logs with level `error` and below to `error.log`\n    // - Write all logs with level `info` and below to `combined.log`\n    //\n    //  new transports.File({ filename: \"error.log\", level: \"error\" }),\n    //  new transports.File({ filename: \"combined.log\" }),\n    new transports.Console(),\n  ],\n});\n\n/**\n * Attach logger to console when not in production\n */\n// if (process.env.NODE_ENV !== \"production\") {\n//   logger.add(new transports.Console());\n// }\n","import { logger } from \"./logger\";\n\nconst {\n  keccak256,\n  defaultAbiCoder,\n  toUtf8Bytes,\n  solidityPack,\n} = require(\"ethers/lib/utils\");\nconst { ecsign } = require(\"ethereumjs-util\");\n\nconst config = require(\"../config\");\n\nconst DIGEST_DATA = {\n  token: {\n    typehash: keccak256(\n      toUtf8Bytes(\n        \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"\n      )\n    ),\n    valueTypes: [\n      \"bytes32\",\n      \"address\",\n      \"address\",\n      \"uint256\",\n      \"uint256\",\n      \"uint256\",\n    ],\n    values: [\"owner\", \"spender\", \"value\", \"nonce\", \"deadline\"],\n  },\n  nft: {\n    typehash: keccak256(\n      toUtf8Bytes(\n        \"Permit(address owner,address spender,uint256 tokenId,uint256 nonce,uint256 deadline)\"\n      )\n    ),\n    valueTypes: [\n      \"bytes32\",\n      \"address\",\n      \"address\",\n      \"uint256\",\n      \"uint256\",\n      \"uint256\",\n    ],\n    values: [\"owner\", \"spender\", \"tokenId\", \"nonce\", \"deadline\"],\n  },\n  notarization: {\n    typehash: keccak256(\n      toUtf8Bytes(\n        \"Notarize(bytes32 hash, string memory uri, address applicant)\"\n      )\n    ),\n    valueTypes: [\"bytes32\", \"bytes32\", \"string\", \"address\"],\n    values: [\"hash\", \"uri\", \"applicant\"],\n  },\n};\n\nexport const sign = (digest: string, privateKey: Buffer) => {\n  return ecsign(Buffer.from(digest.slice(2), \"hex\"), privateKey);\n};\n\ntype Approve = {\n  owner: string;\n  spender: string;\n  value?: number;\n  tokenId?: number;\n};\n\ntype Data = {\n  approve?: Approve;\n  nonce?: number;\n  deadline?: number;\n  hash?: string;\n  uri?: string;\n  applicant?: string;\n};\n\n// Returns the EIP712 hash which should be signed by the user\n// in order to make a call to `permit`\nexport function getPermitDigest(\n  name: string,\n  address: string,\n  chainId: number,\n  data: Data,\n  contractType: \"nft\" | \"token\" | \"notarization\"\n) {\n  const DOMAIN_SEPARATOR = getDomainSeparator(name, \"0.1.0\", address, chainId);\n\n  const digestData = DIGEST_DATA[contractType];\n\n  return keccak256(\n    solidityPack(\n      [\"bytes1\", \"bytes1\", \"bytes32\", \"bytes32\"],\n      [\n        \"0x19\",\n        \"0x01\",\n        DOMAIN_SEPARATOR,\n        keccak256(\n          defaultAbiCoder.encode(digestData.valueTypes, [\n            digestData.typehash,\n            ...digestData.values.map((el) => data[el] || data.approve?.[el]),\n          ])\n        ),\n      ]\n    )\n  );\n}\n\n// // Gets the EIP712 domain separator\n// export function getDomainSeparator(\n//   name: string,\n//   contractAddress: string,\n//   chainId: number\n// ) {\n//   return keccak256(\n//     defaultAbiCoder.encode(\n//       [\"bytes32\", \"bytes32\", \"bytes32\", \"uint256\", \"address\"],\n//       [\n//         keccak256(\n//           toUtf8Bytes(\n//             \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n//           )\n//         ),\n//         keccak256(toUtf8Bytes(name)),\n//         keccak256(toUtf8Bytes(\"1\")),\n//         chainId,\n//         contractAddress,\n//       ]\n//     )\n//   );\n// }\n\nexport function getDomainSeparator(\n  name: string,\n  version: string,\n  contractAddress: string,\n  chainId: number\n) {\n  return keccak256(\n    defaultAbiCoder.encode(\n      [\"bytes32\", \"bytes32\", \"bytes32\", \"uint256\", \"address\"],\n      [\n        keccak256(\n          toUtf8Bytes(\n            \"EIP712Domain(string name, string version, uint256 chainId, address verifyingContract)\"\n          )\n        ),\n        keccak256(toUtf8Bytes(name)),\n        keccak256(toUtf8Bytes(version)),\n        chainId,\n        contractAddress,\n      ]\n    )\n  );\n}\n\nexport async function getTransactionData(\n  nonce: number,\n  functionSignature: string,\n  publicKey: string,\n  privateKey: string,\n  contract: { name: string; version: string; address: string; chainId: number }\n) {\n  const digest = keccak256(\n    solidityPack(\n      [\"bytes1\", \"bytes1\", \"bytes32\", \"bytes32\"],\n      [\n        \"0x19\",\n        \"0x01\",\n        getDomainSeparator(\n          contract.name,\n          contract.version,\n          contract.address,\n          contract.chainId\n        ),\n        keccak256(\n          defaultAbiCoder.encode(\n            [\"uint256\", \"address\", \"bytes32\"],\n            [\n              nonce,\n              publicKey,\n              keccak256(\n                Buffer.from(functionSignature.replace(\"0x\", \"\"), \"hex\")\n              ),\n            ]\n          )\n        ),\n      ]\n    )\n  );\n  logger.info(`Digest: ${digest}`);\n\n  const signature = sign(\n    digest,\n    Buffer.from(privateKey.replace(\"0x\", \"\"), \"hex\")\n  );\n\n  return signature;\n}\n\n// export async function getTransactionData(\n//   nonce: number,\n//   functionSignature: string,\n//   publicKey: string,\n//   privateKey: string,\n//   contract: { name: string; version: string; address: string; chainId: number }\n// ) {\n//   const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\n//   const message = keccak256(\n//     defaultAbiCoder.encode(\n//       [\"uint256\", \"address\", \"bytes32\"],\n//       [\n//         nonce,\n//         publicKey,\n//         keccak256(Buffer.from(functionSignature.replace(\"0x\", \"\"), \"hex\")),\n//       ]\n//     )\n//   );\n//   const digest = keccak256(\n//     solidityPack(\n//       [\"string\", \"bytes\", \"bytes32\"],\n//       [\n//         messagePrefix,\n//         Buffer.from(\"132\"),\n//         message,\n//       ]\n//     )\n//   );\n\n//   logger.info(\n//     `Message length: ${toUtf8Bytes(String(message.length)).toString()}`\n//   );\n//   logger.info(`Digest: ${digest}`);\n\n//   const signature = sign(\n//     digest,\n//     Buffer.from(privateKey.replace(\"0x\", \"\"), \"hex\")\n//   );\n\n//   return signature;\n// }\n","export default {\n  abi: [\n    {\n      inputs: [\n        {\n          internalType: \"string\",\n          name: \"_tokenName\",\n          type: \"string\",\n        },\n        {\n          internalType: \"string\",\n          name: \"_tokenSymbol\",\n          type: \"string\",\n        },\n        {\n          internalType: \"address\",\n          name: \"_pablockTokenAddress\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"_metaTxAddress\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"constructor\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"approved\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Approval\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"bool\",\n          name: \"approved\",\n          type: \"bool\",\n        },\n      ],\n      name: \"ApprovalForAll\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"string\",\n          name: \"uri\",\n          type: \"string\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256[]\",\n          name: \"\",\n          type: \"uint256[]\",\n        },\n      ],\n      name: \"TokenGeneration\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Transfer\",\n      type: \"event\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"approve\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n      ],\n      name: \"balanceOf\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [],\n      name: \"baseURI\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"getApproved\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n      ],\n      name: \"isApprovedForAll\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [],\n      name: \"name\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"ownerOf\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"safeTransferFrom\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"_data\",\n          type: \"bytes\",\n        },\n      ],\n      name: \"safeTransferFrom\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n        {\n          internalType: \"bool\",\n          name: \"approved\",\n          type: \"bool\",\n        },\n      ],\n      name: \"setApprovalForAll\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"bytes4\",\n          name: \"interfaceId\",\n          type: \"bytes4\",\n        },\n      ],\n      name: \"supportsInterface\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [],\n      name: \"symbol\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"index\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"tokenByIndex\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"index\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"tokenOfOwnerByIndex\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"tokenURI\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [],\n      name: \"totalSupply\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"contractAddr\",\n          type: \"address\",\n        },\n      ],\n      name: \"initialize\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"quantity\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"string\",\n          name: \"_uri\",\n          type: \"string\",\n        },\n      ],\n      name: \"mintToken\",\n      outputs: [\n        {\n          internalType: \"uint256[]\",\n          name: \"indexes\",\n          type: \"uint256[]\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transferFrom\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"unlockToken\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"isUnlocked\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [],\n      name: \"getVersion\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n  ],\n};\n","import config from \"../config\";\nimport PablockNFT from \"./abis/PablockNFT\";\nimport PablockNotarization from \"./abis/PablockNotarization\";\n\nexport const IPFS_GATEWAY = \"https://gateway.pinata.cloud/ipfs\";\n\nexport const ERROR_TYPE = {\n  NOT_INITIALIZE: \"SDK not initialized\",\n  API_KEY_NOT_AUTHENTICATED: \"API Key not authenticated\",\n  CONTRACT_ERROR: \"Smart contract error\",\n  UNABLE_TO_GENERATE_SUB_JWT: \"Unable to generate subJWT\",\n  UNABLE_TO_CHECK_TOKEN: \"Unable to check token\",\n};\n\nexport const PABLOCK_NFT_OBJ = {\n  abi: PablockNFT.abi,\n  name: \"PablockNFT\",\n  version: \"0.2.2\",\n};\n\nexport const PABLOCK_NOTARIZATION_OBJ = {\n  abi: PablockNotarization.abi,\n  name: \"PablockNotarization\",\n  version: \"0.1.1\",\n};\n","export default {\n  abi: [\n    {\n      inputs: [\n        {\n          internalType: \"string\",\n          name: \"_name\",\n          type: \"string\",\n        },\n        {\n          internalType: \"string\",\n          name: \"_symbol\",\n          type: \"string\",\n        },\n        {\n          internalType: \"address\",\n          name: \"_owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"_delegate\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"_pablockTokenAddress\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"constructor\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Approval\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Transfer\",\n      type: \"event\",\n    },\n    {\n      inputs: [],\n      name: \"DOMAIN_SEPARATOR\",\n      outputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"PERMIT_TYPEHASH\",\n      outputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"TRANSFER_TYPEHASH\",\n      outputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n      ],\n      name: \"allowance\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"approve\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"account\",\n          type: \"address\",\n        },\n      ],\n      name: \"balanceOf\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"decimals\",\n      outputs: [\n        {\n          internalType: \"uint8\",\n          name: \"\",\n          type: \"uint8\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"subtractedValue\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"decreaseAllowance\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"addedValue\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"increaseAllowance\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"name\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"totalSupply\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"recipient\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transfer\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"contractAddr\",\n          type: \"address\",\n        },\n      ],\n      name: \"initialize\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"mintQuantity\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"mint\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_addr\",\n          type: \"address\",\n        },\n      ],\n      name: \"addDelegate\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_addr\",\n          type: \"address\",\n        },\n      ],\n      name: \"removeDelegate\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_newOwner\",\n          type: \"address\",\n        },\n      ],\n      name: \"changeOwner\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint8\",\n          name: \"v\",\n          type: \"uint8\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"r\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"s\",\n          type: \"bytes32\",\n        },\n      ],\n      name: \"transferToken\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transferFrom\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_addr\",\n          type: \"address\",\n        },\n      ],\n      name: \"getDelegateStatus\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"getVersion\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"pure\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"getChainId\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"chain\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"deadline\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint8\",\n          name: \"v\",\n          type: \"uint8\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"r\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"s\",\n          type: \"bytes32\",\n        },\n      ],\n      name: \"requestPermit\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"hash\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"uint8\",\n          name: \"v\",\n          type: \"uint8\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"r\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"s\",\n          type: \"bytes32\",\n        },\n      ],\n      name: \"verifySignature\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"signer\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"pure\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"addr\",\n          type: \"address\",\n        },\n      ],\n      name: \"getNonces\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n  ],\n};\n","export default {\n  abi: [\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"_maxSupply\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"constructor\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Approval\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Transfer\",\n      type: \"event\",\n    },\n    {\n      inputs: [],\n      name: \"DOMAIN_SEPARATOR\",\n      outputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"PERMIT_TYPEHASH\",\n      outputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n      ],\n      name: \"allowance\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"approve\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"account\",\n          type: \"address\",\n        },\n      ],\n      name: \"balanceOf\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"decimals\",\n      outputs: [\n        {\n          internalType: \"uint8\",\n          name: \"\",\n          type: \"uint8\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"subtractedValue\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"decreaseAllowance\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"addedValue\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"increaseAllowance\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"name\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"totalSupply\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"recipient\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transfer\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"sender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"recipient\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transferFrom\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"mintQuantity\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"requestToken\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_contract\",\n          type: \"address\",\n        },\n      ],\n      name: \"addContractToWhitelist\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_contract\",\n          type: \"address\",\n        },\n      ],\n      name: \"removeContractFromWhitelist\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_newOwner\",\n          type: \"address\",\n        },\n      ],\n      name: \"changeOwner\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"_maxSupply\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"changeMaxSupply\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"unlimitedApprove\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"address\",\n          name: \"addr\",\n          type: \"address\",\n        },\n      ],\n      name: \"receiveAndBurn\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_contract\",\n          type: \"address\",\n        },\n      ],\n      name: \"getContractStatus\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"deadline\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint8\",\n          name: \"v\",\n          type: \"uint8\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"r\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"s\",\n          type: \"bytes32\",\n        },\n      ],\n      name: \"requestPermit\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"addr\",\n          type: \"address\",\n        },\n      ],\n      name: \"getNonces\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"getVersion\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n  ],\n};\n","export default {\n  ENDPOINT_LOCAL: \"http://127.0.0.1:8082\",\n  ENDPOINT_MUMBAI: \"https://pablock-api-dev.bcode.cloud\",\n  ENDPOINT_POLYGON: \"https://pablock-api.bcode.cloud\",\n\n  CHAIN_ID_LOCAL: 1,\n  CHAIN_ID_MUMBAI: 80001,\n  CHAIN_ID_POLYGON: 137,\n\n  RPC_PROVIDER_LOCAL: \"http://127.0.0.1:7545\",\n  RPC_PROVIDER_MUMBAI: \"https://rpc-mumbai.maticvigil.com/\",\n  RPC_PROVIDER_POLYGON: \"https://rpc-mainnet.maticvigil.com/\",\n\n  PABLOCK_TOKEN_ADDRESS_LOCAL: \"0x9e0296fDfaB97c428507e36f077177EbDC4e5Faf\",\n  PABLOCK_META_TRANSACTION_LOCAL: \"0x3A2faCBF588DA64Ef94D90049d529f3862b7a6fb\",\n  PABLOCK_NOTARIZATION_LOCAL: \"0x4aC8ED5D389755b48992C2A3850727f8D878ed26\",\n  PABLOCK_NFT_LOCAL: \"0x272B411731CDF59a87250bEEB0A8F7031E98b86D\",\n  PABLOCK_MULTISIGN_FACTORY_LOCAL: \"0xc36E2D4a155066423bD6f51A53CAe753353aFd5d\",\n  TEST_META_TX_LOCAL: \"0xbFa175f1930833dE77bcE8a185b48Cc60bDb81a4\",\n\n  PABLOCK_TOKEN_ADDRESS_MUMBAI: \"0xa2984CfEB9E091ff9b945c527CbDc25609686De3\",\n  PABLOCK_META_TRANSACTION_MUMBAI: \"0x4419AF074BC3a6C7D90f242dfdC1a163Bc710091\",\n  PABLOCK_NOTARIZATION_MUMBAI: \"0x8344F05f33AE80f1c03C8dc8f619719AcDe8cE49\",\n  PABLOCK_NFT_MUMBAI: \"0x314Caa948A6BD160451e823510C467A8A330C074\",\n  PABLOCK_MULTISIGN_FACTORY_MUMBAI:\n    \"0x7296EE0F1036eC74eCF111E676e70eE97597A7d1\",\n  TEST_META_TX_MUMBAI: \"0xE518725c53B4272d72c10b623A8443B62D19Ef1E\",\n\n  PABLOCK_TOKEN_ADDRESS_POLYGON: \"0x284a7eF2ADD52890980E0173469FDE45d172bABD\",\n  PABLOCK_META_TRANSACTION_POLYGON:\n    \"0x5Dc63336bA6d4c1688E51e91fD7B002FC58C2dc9\",\n  PABLOCK_NOTARIZATION_POLYGON: \"0xa347328B5b71eCFFcA8Da951AE2bDDa42F32066D\",\n  PABLOCK_NFT_POLYGON: \"0x5979b9697C7ff4AD8925680a0998C449F070E962\",\n  PABLOCK_MULTISIGN_FACTORY_POLYGON:\n    \"0xDF4FEC568B4975AE4E39AAC576143d0E86dd2e1A\",\n\n  PABLOCK_ADDRESS_LOCAL: \"0xfc8CFa30350f7B195f2b5c6F350f76720bfD89f4\",\n};\n","import CryptoJS from \"crypto-js\";\n\n/**\n * @description Take string as input and return the SHA256 hash of the string\n * @param input\n * @returns hash string\n */\nexport function fromString(input: string): string {\n  return `0x${CryptoJS.SHA256(input).toString(CryptoJS.enc.Hex)}`;\n}\n\n/**\n * @descrioption Take buffer from File type and return SHA256 hash of the buffer\n * @param input\n * @returns hash string\n *\n * @example  const file = fs.readFileSync(\"./tests/Blue_Icon.png\");\n */\nexport function fromBuffer(file: number[]): string {\n  const wordArray = CryptoJS.lib.WordArray.create(file);\n  return `0x${CryptoJS.SHA256(wordArray).toString(CryptoJS.enc.Hex)}`;\n}\n","import QRCode from \"qrcode\";\n\n/**\n * @description Take string as input and return QRCode buffer that has been generated\n * @param input\n * @returns ArrayBufferLike buffer of QRCode\n */\nexport function fromString(input: string): { [any: string]: any } {\n  const buffer = async () => {\n    let enc = new TextEncoder();\n    return enc.encode(await QRCode.toString(input)).buffer;\n  };\n  const print = async () => console.log(await QRCode.toString(input));\n\n  return { buffer, print };\n}\n","//Libraries\nimport axios from \"axios\";\nimport { ethers, Wallet } from \"ethers\";\nimport { pick, range } from \"lodash\";\nimport w3Abi, { AbiCoder } from \"web3-eth-abi\";\nimport { MerkleTree } from \"merkletreejs\";\n\n//Utils\nimport { getTransactionData } from \"./common/utils\";\nimport { logger } from \"./common/logger\";\n\n//Constants\nimport { ERROR_TYPE, IPFS_GATEWAY, PABLOCK_NFT_OBJ } from \"./common/constants\";\n\n//Abis\nimport CustomERC20 from \"./common/abis/CustomERC20\";\nimport PablockToken from \"./common/abis/PablockToken\";\nimport PablockNFT from \"./common/abis/PablockNFT\";\n\n//Config\nimport config from \"./config\";\n\n//Types\nimport {\n  SdkOptions,\n  ContractStruct,\n  Optionals,\n  MetaTransaction,\n  ReturnParam,\n  PablockContractsObj,\n} from \"./types\";\n\nfunction getWeb3Abi(w3Abi: unknown): AbiCoder {\n  return w3Abi as AbiCoder;\n}\n\nconst web3Abi = getWeb3Abi(w3Abi);\n\nexport class PablockSDK {\n  apiKey?: string;\n  wallet?: Wallet | null;\n  provider?: any;\n  authToken?: string;\n  env: string;\n  endpoint: string;\n  rpcProvider: string;\n  initialized: boolean;\n  contracts: PablockContractsObj | {};\n\n  constructor(sdkOptions: SdkOptions) {\n    this.initialized = false;\n    if (!sdkOptions.config?.debugMode) {\n      logger.transports[0].silent = true;\n    }\n\n    this.env = sdkOptions.config?.env || \"MUMBAI\";\n    this.endpoint =\n      sdkOptions.config?.endpoint || config[`ENDPOINT_${this.env}`];\n    this.rpcProvider =\n      sdkOptions.config?.rpcProvider || config[`RPC_PROVIDER_${this.env}`];\n\n    logger.info(`Working environment: ${this.env}`);\n    // logger.info(\"RPC Provider \", this.rpcProvider);\n\n    if (sdkOptions.apiKey) {\n      this.apiKey = sdkOptions.apiKey;\n    } else if (sdkOptions.authToken) {\n      this.authToken = sdkOptions.authToken;\n    } else {\n      console.error(\n        \"[Error] API key or auth token are required, please insert one!\"\n      );\n    }\n\n    // this.network = sdkOptions.config?.network || \"MUMBAI\";\n    this.provider = new ethers.providers.JsonRpcProvider(this.rpcProvider);\n\n    if (sdkOptions.privateKey) {\n      this.wallet = new ethers.Wallet(sdkOptions.privateKey);\n    } else {\n      this.wallet = ethers.Wallet.createRandom();\n    }\n\n    this.contracts = {\n      ...sdkOptions.config.pablockContracts,\n    };\n\n    logger.info(\"Finished initialization\");\n  }\n\n  /**\n   * Need to called once after calling constructor\n   */\n  async init() {\n    try {\n      if (this.apiKey) {\n        let { status, data } = await axios.get(\n          `${this.endpoint}/generateJWT/${this.apiKey}/${this.wallet!.address}`\n        );\n        if (status === 200) {\n          logger.info(\"Auth token received \");\n\n          this.authToken = data.authToken;\n\n          this.contracts = {\n            ...(await axios.get(`${this.endpoint}/contracts`)).data,\n            ...this.contracts,\n          };\n        } else {\n          logger.error(`[Init] Error: ${status}`);\n          throw ERROR_TYPE.API_KEY_NOT_AUTHENTICATED;\n        }\n      } else if (this.authToken) {\n        this.checkJWTValidity();\n      }\n      this.initialized = true;\n    } catch (error) {\n      logger.info(\"[Error] \", error);\n      throw ERROR_TYPE.API_KEY_NOT_AUTHENTICATED;\n    }\n  }\n\n  setPrivateKey(privateKey: string) {\n    this.wallet = new ethers.Wallet(privateKey);\n    logger.info(\"New wallet setted from private key!\");\n  }\n  \n  setMnemonicPhrase(mnemonic: string) {\n    this.wallet =  ethers.Wallet.fromMnemonic(mnemonic);\n    logger.info(\"New wallet setted from mnemonic!\");\n  }\n\n  resetWallet() {\n    this.wallet = null;\n    logger.info(\"Wallet resetted!\");\n  }\n\n  regenerateWallet(){\n    this.wallet = ethers.Wallet.createRandom();\n    logger.info(\"Wallet regenerated!\");\n  }\n\n  isInitialized() {\n    return this.initialized;\n  }\n\n  getPablockContracts(): PablockContractsObj | {} {\n    return this.contracts;\n  }\n\n  /**\n   * Return JWT token\n   *\n   * @returns authToken\n   */\n  getAuthToken() {\n    logger.info(`Your auth token is: ${this.authToken}`);\n\n    if (this.authToken) {\n      return this.authToken;\n    } else {\n      console.error(\n        \"[Error] run sdk.init() if you don't already do that, otherwise check if your API key is correct\"\n      );\n      return null;\n    }\n  }\n\n  /**\n   * Return apiKey added in contructor\n   *\n   * @returns apiKey\n   */\n  getApiKey() {\n    logger.info(`Your API key is: ${this.apiKey}`);\n    return this.apiKey;\n  }\n\n  /**\n   * Return address of wallet associated in current instance\n   *\n   * @returns wallet address\n   */\n  getWalletAddress() {\n    return this.wallet!.address;\n  }\n\n  getWallet() {\n    return this.wallet;\n  }\n\n  getPrivateKey() {\n    return this.wallet!.privateKey;\n  }\n\n  /**\n   * This function helps to check PablockToken (PTK)\n   *\n   * @param address\n   * @returns balance - string\n   */\n  async getPablockTokenBalance(address = this.wallet!.address) {\n    const pablockToken = new ethers.Contract(\n      this.contracts[`PABLOCK_TOKEN_ADDRESS`],\n      PablockToken.abi,\n      this.provider\n    );\n\n    const balance = parseInt(\n      ethers.utils.formatEther(await pablockToken.balanceOf(address))\n    );\n\n    logger.info(`User has ${balance} PTK`);\n    return balance;\n  }\n\n  async getTokenBalance(\n    contractAddress = config[`CUSTOM_TOKEN_ADDRESS_${this.env}`],\n    address = this.wallet!.address\n  ) {\n    try {\n      const customToken = new ethers.Contract(\n        contractAddress,\n        CustomERC20.abi,\n        this.provider\n      );\n\n      const balance = parseInt(\n        ethers.utils.formatEther(await customToken.balanceOf(address))\n      );\n\n      logger.info(`User has ${balance} ${await customToken.name()}`);\n      return balance;\n    } catch (err) {\n      logger.error(\"[Pablock API] Custom token balance: \", err);\n      throw ERROR_TYPE.CONTRACT_ERROR;\n    }\n  }\n\n  /**\n   * This function return MATIC balance of the user wallet by default, otherwise, returns\n   * the balance of specified wallet\n   *\n   * @param address\n   * @returns number\n   */\n  async getMaticBalance(address = this.wallet!.address) {\n    const balance = parseInt(\n      (await this.provider.getBalance(address)).toString()\n    );\n\n    logger.info(`User has ${balance} MATIC`);\n    return balance;\n  }\n\n  async requestTestPTK() {\n    logger.info(`Request 10 PTK for test from ${this.wallet!.address}`);\n\n    let { status, data } = await axios.get(\n      `${this.endpoint}/faucet/${this.wallet!.address}`,\n      {\n        headers: {\n          Authorization: `Bearer ${this.authToken}`,\n        },\n      }\n    );\n\n    logger.info(`Request token status: ${status}`);\n\n    return data;\n  }\n\n  /**\n   * Request token of contract for user\n   *\n   * @param amount\n   * @param contractAddress\n   * @returns request response\n   */\n  async requestToken(amount: number, contractAddress: string) {\n    logger.info(`Request ${amount} token from ${this.wallet!.address}`);\n\n    let { status, data } = await axios.post(\n      `${this.endpoint}/mintToken`,\n      { contractAddress, to: this.wallet!.address, amount },\n      {\n        headers: {\n          Authorization: `Bearer ${this.authToken}`,\n        },\n      }\n    );\n\n    logger.info(`Request token status: ${status}`);\n\n    return data;\n  }\n\n  /**\n   * Function that allows user to mintNFT from PablockNFT contract or other contract if specified\n   * The specified contract must be Pablock-compatible\n   *\n   * @param amount\n   * @param uri\n   * @param contractAddress\n   * @param webhookUrl\n   * @returns\n   */\n  async mintPablockNFT(\n    amount: number,\n    uri: string,\n    optionals: Optionals | null\n  ) {\n    try {\n      const tx: MetaTransaction = await this.prepareTransaction(\n        { ...PABLOCK_NFT_OBJ, address: this.contracts[`PABLOCK_NFT`] },\n        \"mintToken\",\n        [this.wallet!.address, amount, uri]\n      );\n\n      const receipt = await this.executeTransaction(tx, optionals);\n\n      return receipt;\n    } catch (err) {\n      logger.error(`NFTMint error: ${err} `);\n      return null;\n    }\n  }\n\n  /**\n   * This function set allowance and permit Pablock Address to transfer the NFT to the set receiver address\n   *\n   * @param to\n   * @param tokenId\n   * @param deadline\n   * @param contractAddress\n   * @returns\n   */\n  async sendPablockNFT(\n    to: string,\n    tokenId: number,\n    optionals: Optionals | null\n  ) {\n    try {\n      const tx: MetaTransaction = await this.prepareTransaction(\n        { ...PABLOCK_NFT_OBJ, address: this.contracts[`PABLOCK_NFT`]! },\n        \"transferFrom\",\n        [this.wallet!.address, to, tokenId]\n      );\n\n      const receipt = await this.executeTransaction(tx, optionals);\n\n      return receipt;\n    } catch (err) {\n      logger.error(`NFTTransfer error: ${err} `);\n      return null;\n    }\n  }\n\n  async prepareTransaction(\n    contractObj: ContractStruct,\n    functionName: string,\n    params: Array<any>,\n    optionals?: { nonce: number }\n  ): Promise<MetaTransaction> {\n    logger.info(`[Prepare Transaction]`);\n    logger.info(\n      `${contractObj.address}\\n${contractObj.name}\\n${contractObj.version}\\n${functionName}`\n    );\n\n    let functionSignature = web3Abi.encodeFunctionCall(\n      contractObj.abi.find(\n        (el) => el.type === \"function\" && el.name === functionName\n      ),\n      params\n    );\n\n    const metaTxContract = this.getContract(\n      this.contracts[`PABLOCK_META_TRANSACTION`],\n      [\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"user\",\n              type: \"address\",\n            },\n          ],\n          name: \"getNonce\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"nonce\",\n              type: \"uint256\",\n            },\n          ],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ]\n    );\n    /**\n     * Allow user to send more transaction at once by specifing future nonce\n     */\n    let nonce = optionals?.nonce || 0;\n    if (!optionals?.nonce) {\n      nonce = await metaTxContract.getNonce(this.wallet!.address);\n    }\n\n    logger.info(`[Prepare Transaction] Nonce: ${nonce}`);\n\n    // const { data } = await axios.get(\n    //   `${this.endpoint}/getNonce/${this.wallet!.address}`,\n    //   {\n    //     headers: { Authorization: `Bearer ${this.authToken}` },\n    //   }\n    // );\n\n    let { r, s, v } = await getTransactionData(\n      nonce,\n      functionSignature,\n      this.wallet!.address,\n      this.wallet!.privateKey,\n      {\n        name: contractObj.name,\n        version: contractObj.version,\n        address: contractObj.address,\n        // chainId: (await this.provider.getNetwork()).chainId,\n        chainId: config[`CHAIN_ID_${this.env}`],\n      }\n    );\n    logger.info(\"[Prepare Transaction] Success\");\n\n    return {\n      contractAddress: contractObj.address,\n      userAddress: this.wallet!.address,\n      functionSignature,\n      r: `0x${r.toString(\"hex\")}`,\n      s: `0x${s.toString(\"hex\")}`,\n      v,\n    };\n  }\n\n  async executeTransaction(tx: MetaTransaction, optionals: Optionals | null) {\n    try {\n      const { status, data } = await axios.post(\n        `${this.endpoint}/sendRawTransaction`,\n        {\n          tx,\n          ...optionals,\n        },\n        { headers: { Authorization: `Bearer ${this.authToken}` } }\n      );\n      if (status === 200) {\n        logger.info(\"[Execute Transaction] Success\");\n        return data.tx;\n      } else {\n        logger.info(`[Execute Transaction] Receive status: ${status}`);\n        return null;\n      }\n    } catch (err) {\n      logger.error(`[Execute Transaction] Error: ${err}`);\n      return null;\n    }\n  }\n\n  async executeAsyncTransaction(tx: MetaTransaction, optionals: Optionals) {\n    try {\n      const { status, data } = await axios.post(\n        `${this.endpoint}/sendRawTransactionAsync`,\n        {\n          tx,\n          ...optionals,\n        },\n        { headers: { Authorization: `Bearer ${this.authToken}` } }\n      );\n\n      if (status === 200) {\n        logger.info(\"[Execute Async Transaction] Success\");\n        return data.requestId;\n      } else {\n        logger.info(`[Execute Async Transaction] Receive status: ${status}`);\n        return null;\n      }\n    } catch (err) {\n      logger.error(`[Execute Async Transaction] Error: ${err}`);\n      return null;\n    }\n  }\n\n  async notarizeHash(hash: string, optionals: Optionals) {\n    try {\n      const { status, data } = await axios.post(\n        `${this.endpoint}/notarize`,\n        {\n          hash,\n          ...optionals,\n        },\n        { headers: { Authorization: `Bearer ${this.authToken}` } }\n      );\n      if (status === 200) {\n        return data.requestId;\n      } else {\n        logger.error(`Notarization error, status code ${status} `);\n      }\n    } catch (err) {\n      logger.error(`Notarization error: ${err} `);\n      return null;\n    }\n  }\n\n  async checkBundledNotarization(\n    requestId: string,\n    returnParams: ReturnParam[]\n  ) {\n    let {\n      status,\n      data: { hash, ipfsMerkleTree },\n    } = await axios.get(`${this.endpoint}/checkNotarizationTree/${requestId}`, {\n      headers: {\n        Authorization: `Bearer ${this.authToken}`,\n      },\n    });\n\n    let { data: leaves } = await axios.get(`${IPFS_GATEWAY}/${ipfsMerkleTree}`);\n\n    let merkleTree = new MerkleTree(leaves.map((leaf: string) => leaf));\n    const merkleRoot = merkleTree.getHexRoot();\n\n    const merkleProof = merkleTree.getProof(hash);\n    const inclusion = merkleTree.verify(merkleProof, hash, merkleRoot);\n\n    return returnParams.length\n      ? pick(\n          {\n            leaves,\n            merkleRoot,\n            hash,\n            merkleProof,\n            inclusion,\n          },\n          returnParams\n        )\n      : {\n          leaves,\n          merkleRoot,\n          hash,\n          merkleProof,\n          inclusion,\n        };\n  }\n\n  async checkStatus(requestId: string) {\n    const { data } = await axios.get(\n      `${this.endpoint}/checkStatus/${requestId}`,\n      {\n        headers: {\n          Authorization: `Bearer ${this.authToken}`,\n        },\n      }\n    );\n\n    return data;\n  }\n\n  async getMetaTxStatus(requestId: string) {\n    const { data } = await axios.get(\n      `${this.endpoint}/getMetaTxStatus/${requestId}`,\n      {\n        headers: {\n          Authorization: `Bearer ${this.authToken}`,\n        },\n      }\n    );\n\n    return data;\n  }\n\n  getContract(address: string, abi: any[]) {\n    return new ethers.Contract(\n      address,\n      abi,\n      this.wallet?.connect(this.provider)\n    );\n  }\n\n  async getNonce(address: string) {\n    const metaTxContract = this.getContract(\n      this.contracts[`PABLOCK_META_TRANSACTION`],\n      [\n        {\n          inputs: [\n            {\n              internalType: \"address\",\n              name: \"user\",\n              type: \"address\",\n            },\n          ],\n          name: \"getNonce\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"nonce\",\n              type: \"uint256\",\n            },\n          ],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ]\n    );\n\n    return await metaTxContract.getNonce(address);\n  }\n\n  /**\n   * This functions outputs the NFT tokens, owned by the user, of the contract addresses given through the input\n   *\n   * @param contractAddresses\n   * @param ownerAddress\n   * @returns Object with contract addresses as keys and NFT arrays as value\n   */\n  async getOwnedNFT(\n    contractAddresses: string[],\n    ownerAddress = this.wallet!.address\n  ) {\n    let tokenOfOwner = {};\n\n    for (const addr of contractAddresses) {\n      let contract = new ethers.Contract(\n        addr,\n        PablockNFT.abi,\n        this.wallet!.connect(this.provider)\n      );\n\n      let balance = await contract.balanceOf(ownerAddress);\n\n      logger.info(`User has ${balance} NFTs in ${addr} contract`);\n      let tokenIds = [];\n      for (const i of range(balance)) {\n        const tokenId = await contract.tokenOfOwnerByIndex(ownerAddress, i);\n\n        // logger.info(`Token: ${await contract.baseURI()}`);\n\n        // tokenOfOwner[addr] = parseInt(tokenId.values.toString());\n        tokenIds.push({\n          tokenId: tokenId.toString(),\n          tokenURI: await contract.tokenURI(tokenId.toString()),\n        });\n      }\n\n      tokenOfOwner[addr] = tokenIds;\n      // logger.info(`User own from ${addr}: ${tokenOfOwner[addr]}`);\n    }\n\n    return tokenOfOwner;\n  }\n\n  /**\n   * Check if JWT Token is still valid\n   *\n   * @returns boolean\n   */\n  async checkJWTValidity() {\n    try {\n      let { status, data } = await axios.get(`${this.endpoint}/checkJWT`, {\n        headers: {\n          Authorization: `Bearer ${this.authToken}`,\n        },\n      });\n\n      logger.info(`AUTHENTICATION ==> ${status} ${JSON.stringify(data)}`);\n\n      return data.auth;\n    } catch (error) {\n      throw ERROR_TYPE.UNABLE_TO_CHECK_TOKEN;\n    }\n  }\n\n  /**\n   * @description Generate a sub JWT thatt can interact with Pablock API\n   * @param address\n   * @returns\n   */\n  async generateSubJWT(address: string) {\n    try {\n      let { status, data } = await axios.get(\n        `${this.endpoint}/generateSubJWT/${address}`,\n        {\n          headers: {\n            Authorization: `Bearer ${this.authToken}`,\n          },\n        }\n      );\n\n      console.log(data);\n      logger.info(`SubJWT: ${data.authToken}`);\n\n      return data.authToken;\n    } catch (error) {\n      throw ERROR_TYPE.UNABLE_TO_GENERATE_SUB_JWT;\n    }\n  }\n\n  /**\n   * Return API version\n   *\n   * @returns string\n   */\n  async getAPIVersion() {\n    let { data } = await axios.get(`/getVersion`);\n    return data;\n  }\n}\n\nexport * as Hash from \"./modules/hash\"\nexport * as QRCode from \"./modules/qrcode\"\n"],"names":["__async","fromString","CryptoJS","QRCode","w3Abi","ethers","axios","MerkleTree","pick","range"],"mappings":"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"}