{"version":3,"file":"index.js","sources":["../src/common/utils.ts","../src/common/logger.ts","../src/common/abis/PablockNFT.ts","../src/common/constants.ts","../src/common/abis/CustomERC20.ts","../src/common/abis/PablockToken.ts","../src/config.ts","../src/index.ts"],"sourcesContent":["const {\n  keccak256,\n  defaultAbiCoder,\n  toUtf8Bytes,\n  solidityPack,\n} = require(\"ethers/lib/utils\");\nconst { ecsign } = require(\"ethereumjs-util\");\n\nconst config = require(\"../config\");\n\nconst DIGEST_DATA = {\n  token: {\n    typehash: keccak256(\n      toUtf8Bytes(\n        \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"\n      )\n    ),\n    valueTypes: [\n      \"bytes32\",\n      \"address\",\n      \"address\",\n      \"uint256\",\n      \"uint256\",\n      \"uint256\",\n    ],\n    values: [\"owner\", \"spender\", \"value\", \"nonce\", \"deadline\"],\n  },\n  nft: {\n    typehash: keccak256(\n      toUtf8Bytes(\n        \"Permit(address owner,address spender,uint256 tokenId,uint256 nonce,uint256 deadline)\"\n      )\n    ),\n    valueTypes: [\n      \"bytes32\",\n      \"address\",\n      \"address\",\n      \"uint256\",\n      \"uint256\",\n      \"uint256\",\n    ],\n    values: [\"owner\", \"spender\", \"tokenId\", \"nonce\", \"deadline\"],\n  },\n  notarization: {\n    typehash: keccak256(\n      toUtf8Bytes(\n        \"Notarize(bytes32 hash, string memory uri, address applicant)\"\n      )\n    ),\n    valueTypes: [\"bytes32\", \"bytes32\", \"string\", \"address\"],\n    values: [\"hash\", \"uri\", \"applicant\"],\n  },\n};\n\nexport const sign = (digest: string, privateKey: Buffer) => {\n  return ecsign(Buffer.from(digest.slice(2), \"hex\"), privateKey);\n};\n\ntype Approve = {\n  owner: string;\n  spender: string;\n  value?: number;\n  tokenId?: number;\n};\n\ntype Data = {\n  approve?: Approve;\n  nonce?: number;\n  deadline?: number;\n  hash?: string;\n  uri?: string;\n  applicant?: string;\n};\n\n// Returns the EIP712 hash which should be signed by the user\n// in order to make a call to `permit`\nexport function getPermitDigest(\n  name: string,\n  address: string,\n  chainId: number,\n  data: Data,\n  contractType: \"nft\" | \"token\" | \"notarization\"\n) {\n  const DOMAIN_SEPARATOR = getDomainSeparator(name, \"0.1.0\", address, chainId);\n\n  const digestData = DIGEST_DATA[contractType];\n\n  return keccak256(\n    solidityPack(\n      [\"bytes1\", \"bytes1\", \"bytes32\", \"bytes32\"],\n      [\n        \"0x19\",\n        \"0x01\",\n        DOMAIN_SEPARATOR,\n        keccak256(\n          defaultAbiCoder.encode(digestData.valueTypes, [\n            digestData.typehash,\n            ...digestData.values.map((el) => data[el] || data.approve?.[el]),\n          ])\n        ),\n      ]\n    )\n  );\n}\n\n// // Gets the EIP712 domain separator\n// export function getDomainSeparator(\n//   name: string,\n//   contractAddress: string,\n//   chainId: number\n// ) {\n//   return keccak256(\n//     defaultAbiCoder.encode(\n//       [\"bytes32\", \"bytes32\", \"bytes32\", \"uint256\", \"address\"],\n//       [\n//         keccak256(\n//           toUtf8Bytes(\n//             \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n//           )\n//         ),\n//         keccak256(toUtf8Bytes(name)),\n//         keccak256(toUtf8Bytes(\"1\")),\n//         chainId,\n//         contractAddress,\n//       ]\n//     )\n//   );\n// }\n\nexport function getDomainSeparator(\n  name: string,\n  version: string,\n  contractAddress: string,\n  chainId: number\n) {\n  return keccak256(\n    defaultAbiCoder.encode(\n      [\"bytes32\", \"bytes32\", \"bytes32\", \"uint256\", \"address\"],\n      [\n        keccak256(\n          toUtf8Bytes(\n            \"EIP712Domain(string name, string version, uint256 chainId, address verifyingContract)\"\n          )\n        ),\n        keccak256(toUtf8Bytes(name)),\n        keccak256(toUtf8Bytes(version)),\n        chainId,\n        contractAddress,\n      ]\n    )\n  );\n}\n\nexport async function getTransactionData(\n  nonce: number,\n  functionSignature: string,\n  publicKey: string,\n  privateKey: string,\n  contract: { name: string; version: string; address: string; chainId: number }\n) {\n  const digest = keccak256(\n    solidityPack(\n      [\"bytes1\", \"bytes1\", \"bytes32\", \"bytes32\"],\n      [\n        \"0x19\",\n        \"0x01\",\n        getDomainSeparator(\n          contract.name,\n          contract.version,\n          contract.address,\n          contract.chainId\n        ),\n        keccak256(\n          defaultAbiCoder.encode(\n            [\"uint256\", \"address\", \"bytes32\"],\n            [\n              nonce,\n              publicKey,\n              keccak256(\n                Buffer.from(functionSignature.replace(\"0x\", \"\"), \"hex\")\n              ),\n            ]\n          )\n        ),\n      ]\n    )\n  );\n\n  const signature = sign(\n    digest,\n    Buffer.from(privateKey.replace(\"0x\", \"\"), \"hex\")\n  );\n\n  return signature;\n}\n","import winston from \"winston\";\n\nconst { createLogger, format, transports } = require(\"winston\");\n\n/**\n * Define the log format\n */\nconst logFormat = format.combine(\n  format.timestamp(),\n  format.printf(({ level, message, timestamp }) => {\n    // return `[${timestamp}] [${level}] - ${message}`;\n    return `[${level}] - ${message}`;\n  })\n);\n\n/**\n * Logger configuration\n */\nexport const logger = createLogger({\n  level: \"debug\",\n  format: logFormat,\n  transports: [\n    //\n    // - Write all logs with level `error` and below to `error.log`\n    // - Write all logs with level `info` and below to `combined.log`\n    //\n    //  new transports.File({ filename: \"error.log\", level: \"error\" }),\n    //  new transports.File({ filename: \"combined.log\" }),\n    new transports.Console(),\n  ],\n});\n\n/**\n * Attach logger to console when not in production\n */\n// if (process.env.NODE_ENV !== \"production\") {\n//   logger.add(new transports.Console());\n// }\n","export default {\n  abi: [\n    {\n      inputs: [\n        {\n          internalType: \"string\",\n          name: \"_tokenName\",\n          type: \"string\",\n        },\n        {\n          internalType: \"string\",\n          name: \"_tokenSymbol\",\n          type: \"string\",\n        },\n        {\n          internalType: \"address\",\n          name: \"_pablockTokenAddress\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"_metaTxAddress\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"constructor\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"approved\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Approval\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"bool\",\n          name: \"approved\",\n          type: \"bool\",\n        },\n      ],\n      name: \"ApprovalForAll\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"string\",\n          name: \"uri\",\n          type: \"string\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256[]\",\n          name: \"\",\n          type: \"uint256[]\",\n        },\n      ],\n      name: \"TokenGeneration\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Transfer\",\n      type: \"event\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"approve\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n      ],\n      name: \"balanceOf\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [],\n      name: \"baseURI\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"getApproved\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n      ],\n      name: \"isApprovedForAll\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [],\n      name: \"name\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"ownerOf\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"safeTransferFrom\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"_data\",\n          type: \"bytes\",\n        },\n      ],\n      name: \"safeTransferFrom\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n        {\n          internalType: \"bool\",\n          name: \"approved\",\n          type: \"bool\",\n        },\n      ],\n      name: \"setApprovalForAll\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"bytes4\",\n          name: \"interfaceId\",\n          type: \"bytes4\",\n        },\n      ],\n      name: \"supportsInterface\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [],\n      name: \"symbol\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"index\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"tokenByIndex\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"index\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"tokenOfOwnerByIndex\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"tokenURI\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [],\n      name: \"totalSupply\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"contractAddr\",\n          type: \"address\",\n        },\n      ],\n      name: \"initialize\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"quantity\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"string\",\n          name: \"_uri\",\n          type: \"string\",\n        },\n      ],\n      name: \"mintToken\",\n      outputs: [\n        {\n          internalType: \"uint256[]\",\n          name: \"indexes\",\n          type: \"uint256[]\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transferFrom\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"unlockToken\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"isUnlocked\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [],\n      name: \"getVersion\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n  ],\n};\n","import config from \"../config\";\nimport PablockNFT from \"./abis/PablockNFT\";\nimport PablockNotarization from \"./abis/PablockNotarization\";\n\nexport const IPFS_GATEWAY = \"https://gateway.pinata.cloud/ipfs\";\n\nexport const ERROR_TYPE = {\n  NOT_INITIALIZE: \"SDK not initialized\",\n  API_KEY_NOT_AUTHENTICATED: \"API Key not authenticated\",\n  CONTRACT_ERROR: \"Smart contract error\",\n  UNABLE_TO_GENERATE_SUB_JWT: \"Unable to generate subJWT\",\n  UNABLE_TO_CHECK_TOKEN: \"Unable to check token\",\n};\n\nexport const PABLOCK_NFT_OBJ = {\n  abi: PablockNFT.abi,\n  name: \"PablockNFT\",\n  version: \"0.2.1\",\n};\n\nexport const PABLOCK_NOTARIZATION_OBJ = {\n  abi: PablockNotarization.abi,\n  name: \"PablockNotarization\",\n  version: \"0.1.1\",\n};\n","export default {\n  abi: [\n    {\n      inputs: [\n        {\n          internalType: \"string\",\n          name: \"_name\",\n          type: \"string\",\n        },\n        {\n          internalType: \"string\",\n          name: \"_symbol\",\n          type: \"string\",\n        },\n        {\n          internalType: \"address\",\n          name: \"_owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"_delegate\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"_pablockTokenAddress\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"constructor\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Approval\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Transfer\",\n      type: \"event\",\n    },\n    {\n      inputs: [],\n      name: \"DOMAIN_SEPARATOR\",\n      outputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"PERMIT_TYPEHASH\",\n      outputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"TRANSFER_TYPEHASH\",\n      outputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n      ],\n      name: \"allowance\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"approve\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"account\",\n          type: \"address\",\n        },\n      ],\n      name: \"balanceOf\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"decimals\",\n      outputs: [\n        {\n          internalType: \"uint8\",\n          name: \"\",\n          type: \"uint8\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"subtractedValue\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"decreaseAllowance\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"addedValue\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"increaseAllowance\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"name\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"totalSupply\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"recipient\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transfer\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"contractAddr\",\n          type: \"address\",\n        },\n      ],\n      name: \"initialize\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"mintQuantity\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"mint\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_addr\",\n          type: \"address\",\n        },\n      ],\n      name: \"addDelegate\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_addr\",\n          type: \"address\",\n        },\n      ],\n      name: \"removeDelegate\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_newOwner\",\n          type: \"address\",\n        },\n      ],\n      name: \"changeOwner\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint8\",\n          name: \"v\",\n          type: \"uint8\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"r\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"s\",\n          type: \"bytes32\",\n        },\n      ],\n      name: \"transferToken\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transferFrom\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_addr\",\n          type: \"address\",\n        },\n      ],\n      name: \"getDelegateStatus\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"getVersion\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"pure\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"getChainId\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"chain\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"deadline\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint8\",\n          name: \"v\",\n          type: \"uint8\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"r\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"s\",\n          type: \"bytes32\",\n        },\n      ],\n      name: \"requestPermit\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"hash\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"uint8\",\n          name: \"v\",\n          type: \"uint8\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"r\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"s\",\n          type: \"bytes32\",\n        },\n      ],\n      name: \"verifySignature\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"signer\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"pure\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"addr\",\n          type: \"address\",\n        },\n      ],\n      name: \"getNonces\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n  ],\n};\n","export default {\n  abi: [\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"_maxSupply\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"constructor\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Approval\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Transfer\",\n      type: \"event\",\n    },\n    {\n      inputs: [],\n      name: \"DOMAIN_SEPARATOR\",\n      outputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"PERMIT_TYPEHASH\",\n      outputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n      ],\n      name: \"allowance\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"approve\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"account\",\n          type: \"address\",\n        },\n      ],\n      name: \"balanceOf\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"decimals\",\n      outputs: [\n        {\n          internalType: \"uint8\",\n          name: \"\",\n          type: \"uint8\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"subtractedValue\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"decreaseAllowance\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"addedValue\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"increaseAllowance\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"name\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"totalSupply\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"recipient\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transfer\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"sender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"recipient\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transferFrom\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"mintQuantity\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"requestToken\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_contract\",\n          type: \"address\",\n        },\n      ],\n      name: \"addContractToWhitelist\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_contract\",\n          type: \"address\",\n        },\n      ],\n      name: \"removeContractFromWhitelist\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_newOwner\",\n          type: \"address\",\n        },\n      ],\n      name: \"changeOwner\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"_maxSupply\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"changeMaxSupply\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"unlimitedApprove\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"address\",\n          name: \"addr\",\n          type: \"address\",\n        },\n      ],\n      name: \"receiveAndBurn\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_contract\",\n          type: \"address\",\n        },\n      ],\n      name: \"getContractStatus\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"deadline\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint8\",\n          name: \"v\",\n          type: \"uint8\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"r\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"s\",\n          type: \"bytes32\",\n        },\n      ],\n      name: \"requestPermit\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"addr\",\n          type: \"address\",\n        },\n      ],\n      name: \"getNonces\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"getVersion\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n  ],\n};\n","export default {\n  ENDPOINT_LOCAL: \"http://127.0.0.1:8082\",\n  ENDPOINT_MUMBAI: \"https://pablock-api-dev.bcode.cloud\",\n  ENDPOINT_POLYGON: \"http://pablock-api.bcode.cloud\",\n\n  CHAIN_ID_LOCAL: 1,\n  CHAIN_ID_MUMBAI: 80001,\n  CHAIN_ID_POLYGON: 137,\n\n  RPC_PROVIDER_LOCAL: \"http://127.0.0.1:7545\",\n  RPC_PROVIDER_MUMBAI: \"https://rpc-mumbai.maticvigil.com/\",\n  RPC_PROVIDER_POLYGON: \"https://rpc-mainnet.maticvigil.com/\",\n\n  PABLOCK_TOKEN_ADDRESS_LOCAL: \"0x9e0296fDfaB97c428507e36f077177EbDC4e5Faf\",\n  PABLOCK_META_TRANSACTION_LOCAL: \"0x3A2faCBF588DA64Ef94D90049d529f3862b7a6fb\",\n  PABLOCK_NOTARIZATION_LOCAL: \"0x4aC8ED5D389755b48992C2A3850727f8D878ed26\",\n  PABLOCK_NFT_LOCAL: \"0x272B411731CDF59a87250bEEB0A8F7031E98b86D\",\n  PABLOCK_MULTISIGN_FACTORY_LOCAL: \"0xc36E2D4a155066423bD6f51A53CAe753353aFd5d\",\n  TEST_META_TX_LOCAL: \"0xbFa175f1930833dE77bcE8a185b48Cc60bDb81a4\",\n\n  PABLOCK_TOKEN_ADDRESS_MUMBAI: \"0x4D47A9694389B1E42403FC5152E68d8D27803b14\",\n  PABLOCK_META_TRANSACTION_MUMBAI: \"0x4419AF074BC3a6C7D90f242dfdC1a163Bc710091\",\n  PABLOCK_NOTARIZATION_MUMBAI: \"0x8344F05f33AE80f1c03C8dc8f619719AcDe8cE49\",\n  PABLOCK_NFT_MUMBAI: \"0x314Caa948A6BD160451e823510C467A8A330C074\",\n  PABLOCK_MULTISIGN_FACTORY_MUMBAI:\n    \"0x7296EE0F1036eC74eCF111E676e70eE97597A7d1\",\n  TEST_META_TX_MUMBAI: \"0xE518725c53B4272d72c10b623A8443B62D19Ef1E\",\n\n  PABLOCK_ADDRESS_LOCAL: \"0xfc8CFa30350f7B195f2b5c6F350f76720bfD89f4\",\n};\n","//Libraries\nimport axios from \"axios\";\nimport { ethers, Transaction, Wallet } from \"ethers\";\nimport { pick, range } from \"lodash\";\nimport w3Abi, { AbiCoder } from \"web3-eth-abi\";\nimport { MerkleTree } from \"merkletreejs\";\n\n//Utils\nimport { sign, getPermitDigest, getTransactionData } from \"./common/utils\";\nimport { logger } from \"./common/logger\";\n\n//Constants\nimport {\n  ERROR_TYPE,\n  IPFS_GATEWAY,\n  PABLOCK_NFT_OBJ,\n  PABLOCK_NOTARIZATION_OBJ,\n} from \"./common/constants\";\n\n//Abis\nimport CustomERC20 from \"./common/abis/CustomERC20\";\nimport PablockToken from \"./common/abis/PablockToken\";\nimport PablockNFT from \"./common/abis/PablockNFT\";\nimport PablockNotarization from \"./common/abis/PablockNotarization\";\n\n//Config\nimport config from \"./config\";\n\n//Types\nimport {\n  SdkOptions,\n  ContractStruct,\n  Optionals,\n  MetaTransaction,\n  ReturnParam,\n} from \"./types\";\n\nfunction getWeb3Abi(w3Abi: unknown): AbiCoder {\n  return w3Abi as AbiCoder;\n}\n\nconst web3Abi = getWeb3Abi(w3Abi);\n\nexport class PablockSDK {\n  apiKey?: string;\n  wallet?: Wallet;\n  provider?: any;\n  authToken?: string;\n  env: string;\n\n  constructor(sdkOptions: SdkOptions) {\n    if (!sdkOptions.config?.debugMode) {\n      logger.transports[0].silent = true;\n    }\n\n    this.env = sdkOptions.config?.env || \"MUMBAI\";\n\n    logger.info(`Working environment: ${this.env}`);\n    // logger.info(\"RPC Provider \", config[`RPC_PROVIDER_${this.env}`]);\n\n    if (sdkOptions.apiKey) {\n      this.apiKey = sdkOptions.apiKey;\n    } else if (sdkOptions.authToken) {\n      this.authToken = sdkOptions.authToken;\n    } else {\n      console.error(\n        \"[Error] API key or auth token are required, please insert one!\"\n      );\n    }\n\n    // this.network = sdkOptions.config?.network || \"MUMBAI\";\n    this.provider = new ethers.providers.JsonRpcProvider(\n      config[`RPC_PROVIDER_${this.env}`]\n    );\n\n    if (sdkOptions.privateKey) {\n      this.wallet = new ethers.Wallet(sdkOptions.privateKey);\n    } else {\n      this.wallet = ethers.Wallet.createRandom();\n    }\n\n    logger.info(\"Finished initialization\");\n  }\n\n  /**\n   * Need to called once after calling constructor\n   */\n  async init() {\n    try {\n      if (this.apiKey) {\n        let { status, data } = await axios.get(\n          `${config[`ENDPOINT_${this.env}`]}/generateJWT/${this.apiKey}/${\n            this.wallet!.address\n          }`\n        );\n        if (status === 200) {\n          logger.info(\"Auth token received \");\n\n          this.authToken = data.authToken;\n        } else {\n          logger.error(`[Init] Error: ${status}`);\n          throw ERROR_TYPE.API_KEY_NOT_AUTHENTICATED;\n        }\n      } else if (this.authToken) {\n        this.checkJWTValidity();\n      }\n    } catch (error) {\n      logger.info(\"[Error] \", error);\n      throw ERROR_TYPE.API_KEY_NOT_AUTHENTICATED;\n    }\n  }\n\n  /**\n   * Return JWT token\n   *\n   * @returns authToken\n   */\n  getAuthToken() {\n    logger.info(`Your auth token is: ${this.authToken}`);\n\n    if (this.authToken) {\n      return this.authToken;\n    } else {\n      console.error(\n        \"[Error] run sdk.init() if you don't already do that, otherwise check if your API key is correct\"\n      );\n      return null;\n    }\n  }\n\n  /**\n   * Return apiKey added in contructor\n   *\n   * @returns apiKey\n   */\n  getApiKey() {\n    logger.info(`Your API key is: ${this.apiKey}`);\n    return this.apiKey;\n  }\n\n  /**\n   * Return address of wallet associated in current instance\n   *\n   * @returns wallet address\n   */\n  getWalletAddress() {\n    return this.wallet!.address;\n  }\n\n  getWallet() {\n    return this.wallet;\n  }\n\n  getPrivateKey() {\n    return this.wallet!.privateKey;\n  }\n\n  /**\n   * This function helps to check PablockToken (PTK)\n   *\n   * @param address\n   * @returns balance - string\n   */\n  async getPablockTokenBalance(address = this.wallet!.address) {\n    const pablockToken = new ethers.Contract(\n      config[`PABLOCK_TOKEN_ADDRESS_${this.env}`],\n      PablockToken.abi,\n      this.provider\n    );\n\n    const balance = parseInt(\n      ethers.utils.formatEther(await pablockToken.balanceOf(address))\n    );\n\n    logger.info(`User has ${balance} PTK`);\n    return balance;\n  }\n\n  async getTokenBalance(\n    contractAddress = config[`CUSTOM_TOKEN_ADDRESS_${this.env}`],\n    address = this.wallet!.address\n  ) {\n    try {\n      const customToken = new ethers.Contract(\n        contractAddress,\n        CustomERC20.abi,\n        this.provider\n      );\n\n      const balance = parseInt(\n        ethers.utils.formatEther(await customToken.balanceOf(address))\n      );\n\n      logger.info(`User has ${balance} ${await customToken.name()}`);\n      return balance;\n    } catch (err) {\n      logger.error(\"[Pablock API] Custom token balance: \", err);\n      throw ERROR_TYPE.CONTRACT_ERROR;\n    }\n  }\n\n  /**\n   * This function return MATIC balance of the user wallet by default, otherwise, returns\n   * the balance of specified wallet\n   *\n   * @param address\n   * @returns number\n   */\n  async getMaticBalance(address = this.wallet!.address) {\n    const balance = parseInt(\n      (await this.provider.getBalance(address)).toString()\n    );\n\n    logger.info(`User has ${balance} MATIC`);\n    return balance;\n  }\n\n  async requestTestPTK() {\n    logger.info(`Request 10 PTK for test from ${this.wallet!.address}`);\n\n    let { status, data } = await axios.get(\n      `${config[`ENDPOINT_${this.env}`]}/faucet/${this.wallet!.address}`,\n      {\n        headers: {\n          Authorization: `Bearer ${this.authToken}`,\n        },\n      }\n    );\n\n    logger.info(`Request token status: ${status}`);\n\n    return data;\n  }\n\n  /**\n   * Request token of contract for user\n   *\n   * @param amount\n   * @param contractAddress\n   * @returns request response\n   */\n  async requestToken(amount: number, contractAddress: string) {\n    logger.info(`Request ${amount} token from ${this.wallet!.address}`);\n\n    let { status, data } = await axios.post(\n      `${config[`ENDPOINT_${this.env}`]}/mintToken`,\n      { contractAddress, to: this.wallet!.address, amount },\n      {\n        headers: {\n          Authorization: `Bearer ${this.authToken}`,\n        },\n      }\n    );\n\n    logger.info(`Request token status: ${status}`);\n\n    return data;\n  }\n\n  /**\n   * Function that allows user to mintNFT from PablockNFT contract or other contract if specified\n   * The specified contract must be Pablock-compatible\n   *\n   * @param amount\n   * @param uri\n   * @param contractAddress\n   * @param webhookUrl\n   * @returns\n   */\n  async mintPablockNFT(\n    amount: number,\n    uri: string,\n    optionals: Optionals | null\n  ) {\n    try {\n      const tx: MetaTransaction = await this.prepareTransaction(\n        { ...PABLOCK_NFT_OBJ, address: config[`PABLOCK_NFT_${this.env}`] },\n        \"mintToken\",\n        [this.wallet!.address, amount, uri]\n      );\n\n      const receipt = await this.executeTransaction(tx, optionals);\n\n      return receipt;\n    } catch (err) {\n      logger.error(`NFTMint error: ${err} `);\n      return null;\n    }\n  }\n\n  /**\n   * This function set allowance and permit Pablock Address to transfer the NFT to the set receiver address\n   *\n   * @param to\n   * @param tokenId\n   * @param deadline\n   * @param contractAddress\n   * @returns\n   */\n  async sendPablockNFT(\n    to: string,\n    tokenId: number,\n    optionals: Optionals | null\n  ) {\n    try {\n      const tx: MetaTransaction = await this.prepareTransaction(\n        { ...PABLOCK_NFT_OBJ, address: config[`PABLOCK_NFT_${this.env}`] },\n        \"transferFrom\",\n        [this.wallet!.address, to, tokenId]\n      );\n\n      const receipt = await this.executeTransaction(tx, optionals);\n\n      return receipt;\n    } catch (err) {\n      logger.error(`NFTTransfer error: ${err} `);\n      return null;\n    }\n  }\n\n  async prepareTransaction(\n    contractObj: ContractStruct,\n    functionName: string,\n    params: Array<any>\n  ): Promise<MetaTransaction> {\n    logger.info(`[Prepare Transaction]`);\n    logger.info(\n      `${contractObj.address}\\n${contractObj.name}\\n${contractObj.version}`\n    );\n    logger.info(` ${functionName}`);\n\n    let functionSignature = web3Abi.encodeFunctionCall(\n      contractObj.abi.find(\n        (el) => el.type === \"function\" && el.name === functionName\n      ),\n      params\n    );\n\n    const { data } = await axios.get(\n      `${config[`ENDPOINT_${this.env}`]}/getNonce/${this.wallet!.address}`,\n      {\n        headers: { Authorization: `Bearer ${this.authToken}` },\n      }\n    );\n\n    let { r, s, v } = await getTransactionData(\n      data.nonce,\n      functionSignature,\n      this.wallet!.address,\n      this.wallet!.privateKey,\n      {\n        name: contractObj.name,\n        version: contractObj.version,\n        address: contractObj.address,\n        // chainId: (await this.provider.getNetwork()).chainId,\n        chainId: config[`CHAIN_ID_${this.env}`],\n      }\n    );\n    logger.info(\"[Prepare Transaction] Success\");\n\n    return {\n      contractAddress: contractObj.address,\n      userAddress: this.wallet!.address,\n      functionSignature,\n      r: `0x${r.toString(\"hex\")}`,\n      s: `0x${s.toString(\"hex\")}`,\n      v,\n    };\n  }\n\n  async executeTransaction(tx: MetaTransaction, optionals: Optionals | null) {\n    try {\n      const { status, data } = await axios.post(\n        `${config[`ENDPOINT_${this.env}`]}/sendRawTransaction`,\n        {\n          tx,\n          ...optionals,\n        },\n        { headers: { Authorization: `Bearer ${this.authToken}` } }\n      );\n      if (status === 200) {\n        logger.info(\"[Execute Transaction] Success\");\n        return data.tx;\n      } else {\n        logger.info(`[Execute Transaction] Receive status: ${status}`);\n        return null;\n      }\n    } catch (err) {\n      logger.error(`[Execute Transaction] Error: ${err}`);\n      return null;\n    }\n  }\n\n  async executeAsyncTransaction(tx: MetaTransaction, optionals: Optionals) {\n    try {\n      const { status, data } = await axios.post(\n        `${config[`ENDPOINT_${this.env}`]}/sendRawTransactionAsync`,\n        {\n          tx,\n          ...optionals,\n        },\n        { headers: { Authorization: `Bearer ${this.authToken}` } }\n      );\n\n      if (status === 200) {\n        logger.info(\"[Execute Async Transaction] Success\");\n        return data.requestId;\n      } else {\n        logger.info(`[Execute Async Transaction] Receive status: ${status}`);\n        return null;\n      }\n    } catch (err) {\n      logger.error(`[Execute Async Transaction] Error: ${err}`);\n      return null;\n    }\n  }\n\n  // async notarizeHash(\n  //   hash: string,\n  //   uri: string,\n  //   appId: string,\n  //   optionals: Optionals | null\n  // ) {\n  //   try {\n  //     const tx = await this.prepareTransaction(\n  //       {\n  //         ...PABLOCK_NOTARIZATION_OBJ,\n  //         address: config[`PABLOCK_NOTARIZATION_${this.env}`],\n  //       },\n  //       \"notarize\",\n  //       [hash, uri, this.wallet!.address, appId]\n  //     );\n\n  //     console.log(\"TX ==>\", tx);\n\n  //     const receipt = await this.executeTransaction(tx, optionals);\n\n  //     return receipt;\n  //   } catch (err) {\n  //     logger.error(`Notarization error: ${err} `);\n  //     return null;\n  //   }\n  // }\n\n  async notarizeHash(hash: string) {\n    try {\n      const { status, data } = await axios.post(\n        `${config[`ENDPOINT_${this.env}`]}/notarize`,\n        {\n          hash,\n        },\n        { headers: { Authorization: `Bearer ${this.authToken}` } }\n      );\n      if (status === 200) {\n        return data.requestId;\n      } else {\n        logger.error(`Notarization error, status code ${status} `);\n      }\n    } catch (err) {\n      logger.error(`Notarization error: ${err} `);\n      return null;\n    }\n  }\n\n  async checkBundledNotarization(\n    requestId: string,\n    returnParams: ReturnParam[]\n  ) {\n    let {\n      status,\n      data: { hash, ipfsMerkleTree },\n    } = await axios.get(\n      `${config[`ENDPOINT_${this.env}`]}/checkNotarizationTree/${requestId}`,\n      {\n        headers: {\n          Authorization: `Bearer ${this.authToken}`,\n        },\n      }\n    );\n\n    let { data: leaves } = await axios.get(`${IPFS_GATEWAY}/${ipfsMerkleTree}`);\n\n    let merkleTree = new MerkleTree(leaves.map((leaf: string) => leaf));\n    const merkleRoot = merkleTree.getHexRoot();\n\n    const merkleProof = merkleTree.getProof(hash);\n    const inclusion = merkleTree.verify(merkleProof, hash, merkleRoot);\n\n    return returnParams.length\n      ? pick(\n          {\n            leaves,\n            merkleRoot,\n            hash,\n            merkleProof,\n            inclusion,\n          },\n          returnParams\n        )\n      : {\n          leaves,\n          merkleRoot,\n          hash,\n          merkleProof,\n          inclusion,\n        };\n  }\n\n  getContract(address: string, abi: any[]) {\n    return new ethers.Contract(\n      address,\n      abi,\n      this.wallet?.connect(this.provider)\n    );\n  }\n\n  /**\n   * This functions outputs the NFT tokens, owned by the user, of the contract addresses given through the input\n   *\n   * @param contractAddresses\n   * @param ownerAddress\n   * @returns Object with contract addresses as keys and NFT arrays as value\n   */\n  async getOwnedNFT(\n    contractAddresses: string[],\n    ownerAddress = this.wallet!.address\n  ) {\n    let tokenOfOwner = {};\n\n    for (const addr of contractAddresses) {\n      let contract = new ethers.Contract(\n        addr,\n        PablockNFT.abi,\n        this.wallet!.connect(this.provider)\n      );\n\n      let balance = await contract.balanceOf(ownerAddress);\n\n      logger.info(`User has ${balance} NFTs in ${addr} contract`);\n      let tokenIds = [];\n      for (const i of range(balance)) {\n        const tokenId = await contract.tokenOfOwnerByIndex(ownerAddress, i);\n\n        // logger.info(`Token: ${await contract.baseURI()}`);\n\n        // tokenOfOwner[addr] = parseInt(tokenId.values.toString());\n        tokenIds.push({\n          tokenId: tokenId.toString(),\n          tokenURI: await contract.tokenURI(tokenId.toString()),\n        });\n      }\n\n      tokenOfOwner[addr] = tokenIds;\n      // logger.info(`User own from ${addr}: ${tokenOfOwner[addr]}`);\n    }\n\n    return tokenOfOwner;\n  }\n\n  /**\n   * Check if JWT Token is still valid\n   *\n   * @returns boolean\n   */\n  async checkJWTValidity() {\n    try {\n      let { status, data } = await axios.get(\n        `${config[`ENDPOINT_${this.env}`]}/checkJWT`,\n        {\n          headers: {\n            Authorization: `Bearer ${this.authToken}`,\n          },\n        }\n      );\n\n      logger.info(status, data);\n\n      return data.auth;\n    } catch (error) {\n      throw ERROR_TYPE.UNABLE_TO_CHECK_TOKEN;\n    }\n  }\n\n  async generateSubJWT(address: string) {\n    try {\n      let { status, data } = await axios.get(\n        `${config[`ENDPOINT_${this.env}`]}/generateSubJWT/${address}`,\n        {\n          headers: {\n            Authorization: `Bearer ${this.authToken}`,\n          },\n        }\n      );\n\n      console.log(data);\n      logger.info(`SubJWT: ${data.authToken}`);\n\n      return data.authToken;\n    } catch (error) {\n      throw ERROR_TYPE.UNABLE_TO_GENERATE_SUB_JWT;\n    }\n  }\n\n  async createContract(contractAddres: string, abi: any[]) {\n    return new ethers.Contract(contractAddres, abi, this.wallet);\n  }\n\n  async getChainId() {\n    console.log(await this.provider.getNetwork());\n  }\n\n  /**\n   * Return API version\n   *\n   * @returns string\n   */\n  async getAPIVersion() {\n    let { data } = await axios.get(`/getVersion`);\n    return data;\n  }\n}\n"],"names":["w3Abi","ethers","axios","MerkleTree","pick","range"],"mappings":"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"}