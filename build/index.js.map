{"version":3,"file":"index.js","sources":["../src/common/utils.ts","../src/common/logger.ts","../src/common/constants.ts","../src/common/abis/CustomERC20.ts","../src/common/abis/PablockToken.ts","../src/common/abis/PablockNFT.ts","../src/common/abis/PablockNotarization.ts","../src/config.ts","../src/index.ts"],"sourcesContent":["const {\n  keccak256,\n  defaultAbiCoder,\n  toUtf8Bytes,\n  solidityPack,\n} = require(\"ethers/lib/utils\");\nconst { ecsign } = require(\"ethereumjs-util\");\n\nconst DIGEST_DATA = {\n  token: {\n    typehash: keccak256(\n      toUtf8Bytes(\n        \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"\n      )\n    ),\n    valueTypes: [\n      \"bytes32\",\n      \"address\",\n      \"address\",\n      \"uint256\",\n      \"uint256\",\n      \"uint256\",\n    ],\n    values: [\"owner\", \"spender\", \"value\", \"nonce\", \"deadline\"],\n  },\n  nft: {\n    typehash: keccak256(\n      toUtf8Bytes(\n        \"Permit(address owner,address spender,uint256 tokenId,uint256 nonce,uint256 deadline)\"\n      )\n    ),\n    valueTypes: [\n      \"bytes32\",\n      \"address\",\n      \"address\",\n      \"uint256\",\n      \"uint256\",\n      \"uint256\",\n    ],\n    values: [\"owner\", \"spender\", \"tokenId\", \"nonce\", \"deadline\"],\n  },\n  notarization: {\n    typehash: keccak256(\n      toUtf8Bytes(\n        \"Notarize(bytes32 hash, string memory uri, address applicant)\"\n      )\n    ),\n    valueTypes: [\"bytes32\", \"bytes32\", \"string\", \"address\"],\n    values: [\"hash\", \"uri\", \"applicant\"],\n  },\n};\n\nexport const sign = (digest: string, privateKey: Buffer) => {\n  return ecsign(Buffer.from(digest.slice(2), \"hex\"), privateKey);\n};\n\ntype Approve = {\n  owner: string;\n  spender: string;\n  value?: number;\n  tokenId?: number;\n};\n\ntype Data = {\n  approve?: Approve;\n  nonce?: number;\n  deadline?: number;\n  hash?: string;\n  uri?: string;\n  applicant?: string;\n};\n\n// Returns the EIP712 hash which should be signed by the user\n// in order to make a call to `permit`\nexport function getPermitDigest(\n  name: string,\n  address: string,\n  chainId: number,\n  data: Data,\n  contractType: \"nft\" | \"token\" | \"notarization\"\n) {\n  // const DOMAIN_SEPARATOR = getDomainSeparator(name, address, chainId);\n\n  const digestData = DIGEST_DATA[contractType];\n\n  console.log(\n    \"VALUES ==>\",\n    digestData.values.map((el) => data[el] || data.approve?.[el])\n  );\n\n  return keccak256(\n    solidityPack(\n      [\"bytes1\", \"bytes1\", \"bytes32\", \"bytes32\"],\n      [\n        \"0x19\",\n        \"0x01\",\n        DOMAIN_SEPARATOR,\n        keccak256(\n          defaultAbiCoder.encode(digestData.valueTypes, [\n            digestData.typehash,\n            ...digestData.values.map((el) => data[el] || data.approve?.[el]),\n          ])\n        ),\n      ]\n    )\n  );\n}\n\n// // Gets the EIP712 domain separator\n// export function getDomainSeparator(\n//   name: string,\n//   contractAddress: string,\n//   chainId: number\n// ) {\n//   return keccak256(\n//     defaultAbiCoder.encode(\n//       [\"bytes32\", \"bytes32\", \"bytes32\", \"uint256\", \"address\"],\n//       [\n//         keccak256(\n//           toUtf8Bytes(\n//             \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n//           )\n//         ),\n//         keccak256(toUtf8Bytes(name)),\n//         keccak256(toUtf8Bytes(\"1\")),\n//         chainId,\n//         contractAddress,\n//       ]\n//     )\n//   );\n// }\n\nexport async function getDomainSeparator(\n  name: string,\n  version: string,\n  contractAddress: string,\n  chainId: number\n) {\n  return keccak256(\n    defaultAbiCoder.encode(\n      [\"bytes32\", \"bytes32\", \"bytes32\", \"uint256\", \"address\"],\n      [\n        keccak256(\n          toUtf8Bytes(\n            \"EIP712Domain(string name, string version, uint256 chainId, address verifyingContract)\"\n          )\n        ),\n        keccak256(toUtf8Bytes(name)),\n        keccak256(toUtf8Bytes(version)),\n        chainId,\n        contractAddress,\n      ]\n    )\n  );\n}\n\nexport async function getTransactionData(\n  nonce: number,\n  functionSignature: string,\n  publicKey: string,\n  privateKey: string,\n  contract: { name: string; version: string; address: string }\n) {\n  const digest = keccak256(\n    solidityPack(\n      [\"bytes1\", \"bytes1\", \"bytes32\", \"bytes32\"],\n      [\n        \"0x19\",\n        \"0x01\",\n        getDomainSeparator(\n          contract.name,\n          contract.version,\n          contract.address,\n          1\n        ),\n        keccak256(\n          defaultAbiCoder.encode(\n            [\"uint256\", \"address\", \"bytes32\"],\n            [\n              nonce,\n              publicKey,\n              keccak256(\n                Buffer.from(functionSignature.replace(\"0x\", \"\"), \"hex\")\n              ),\n            ]\n          )\n        ),\n      ]\n    )\n  );\n\n  const signature = sign(\n    digest,\n    Buffer.from(privateKey.replace(\"0x\", \"\"), \"hex\")\n  );\n\n  return signature;\n}\n","import winston from \"winston\";\n\nconst { createLogger, format, transports } = require(\"winston\");\n\n/**\n * Define the log format\n */\nconst logFormat = format.combine(\n  format.timestamp(),\n  format.printf(({ level, message, timestamp }) => {\n    // return `[${timestamp}] [${level}] - ${message}`;\n    return `[${level}] - ${message}`;\n  })\n);\n\n/**\n * Logger configuration\n */\nexport const logger = createLogger({\n  level: \"debug\",\n  format: logFormat,\n  transports: [\n    //\n    // - Write all logs with level `error` and below to `error.log`\n    // - Write all logs with level `info` and below to `combined.log`\n    //\n    //  new transports.File({ filename: \"error.log\", level: \"error\" }),\n    //  new transports.File({ filename: \"combined.log\" }),\n    new transports.Console(),\n  ],\n});\n\n/**\n * Attach logger to console when not in production\n */\n// if (process.env.NODE_ENV !== \"production\") {\n//   logger.add(new transports.Console());\n// }\n","export const ERROR_TYPE = {\n  NOT_INITIALIZE: \"SDK not initialized\",\n  API_KEY_NOT_AUTHENTICATED: \"API Key not authenticated\",\n  CONTRACT_ERROR: \"Smart contract error\",\n  UNABLE_TO_GENERATE_SUB_JWT: \"Unable to generate subJWT\",\n  UNABLE_TO_CHECK_TOKEN: \"Unable to check token\",\n};\n","export default {\n  abi: [\n    {\n      inputs: [\n        {\n          internalType: \"string\",\n          name: \"_name\",\n          type: \"string\",\n        },\n        {\n          internalType: \"string\",\n          name: \"_symbol\",\n          type: \"string\",\n        },\n        {\n          internalType: \"address\",\n          name: \"_owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"_delegate\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"_pablockTokenAddress\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"constructor\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Approval\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Transfer\",\n      type: \"event\",\n    },\n    {\n      inputs: [],\n      name: \"DOMAIN_SEPARATOR\",\n      outputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"PERMIT_TYPEHASH\",\n      outputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"TRANSFER_TYPEHASH\",\n      outputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n      ],\n      name: \"allowance\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"approve\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"account\",\n          type: \"address\",\n        },\n      ],\n      name: \"balanceOf\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"decimals\",\n      outputs: [\n        {\n          internalType: \"uint8\",\n          name: \"\",\n          type: \"uint8\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"subtractedValue\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"decreaseAllowance\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"addedValue\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"increaseAllowance\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"name\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"totalSupply\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"recipient\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transfer\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"contractAddr\",\n          type: \"address\",\n        },\n      ],\n      name: \"initialize\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"mintQuantity\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"mint\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_addr\",\n          type: \"address\",\n        },\n      ],\n      name: \"addDelegate\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_addr\",\n          type: \"address\",\n        },\n      ],\n      name: \"removeDelegate\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_newOwner\",\n          type: \"address\",\n        },\n      ],\n      name: \"changeOwner\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint8\",\n          name: \"v\",\n          type: \"uint8\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"r\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"s\",\n          type: \"bytes32\",\n        },\n      ],\n      name: \"transferToken\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transferFrom\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_addr\",\n          type: \"address\",\n        },\n      ],\n      name: \"getDelegateStatus\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"getVersion\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"pure\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"getChainId\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"chain\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"deadline\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint8\",\n          name: \"v\",\n          type: \"uint8\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"r\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"s\",\n          type: \"bytes32\",\n        },\n      ],\n      name: \"requestPermit\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"hash\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"uint8\",\n          name: \"v\",\n          type: \"uint8\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"r\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"s\",\n          type: \"bytes32\",\n        },\n      ],\n      name: \"verifySignature\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"signer\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"pure\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"addr\",\n          type: \"address\",\n        },\n      ],\n      name: \"getNonces\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n  ],\n};\n","export default {\n  abi: [\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"_maxSupply\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"constructor\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Approval\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256\",\n          name: \"value\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Transfer\",\n      type: \"event\",\n    },\n    {\n      inputs: [],\n      name: \"DOMAIN_SEPARATOR\",\n      outputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"PERMIT_TYPEHASH\",\n      outputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n      ],\n      name: \"allowance\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"approve\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"account\",\n          type: \"address\",\n        },\n      ],\n      name: \"balanceOf\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"decimals\",\n      outputs: [\n        {\n          internalType: \"uint8\",\n          name: \"\",\n          type: \"uint8\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"subtractedValue\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"decreaseAllowance\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"addedValue\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"increaseAllowance\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"name\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"totalSupply\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"recipient\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transfer\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"sender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"recipient\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transferFrom\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"mintQuantity\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"requestToken\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_contract\",\n          type: \"address\",\n        },\n      ],\n      name: \"addContractToWhitelist\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_contract\",\n          type: \"address\",\n        },\n      ],\n      name: \"removeContractFromWhitelist\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_newOwner\",\n          type: \"address\",\n        },\n      ],\n      name: \"changeOwner\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"_maxSupply\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"changeMaxSupply\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"unlimitedApprove\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"address\",\n          name: \"addr\",\n          type: \"address\",\n        },\n      ],\n      name: \"receiveAndBurn\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_contract\",\n          type: \"address\",\n        },\n      ],\n      name: \"getContractStatus\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"amount\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"deadline\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint8\",\n          name: \"v\",\n          type: \"uint8\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"r\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"s\",\n          type: \"bytes32\",\n        },\n      ],\n      name: \"requestPermit\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"addr\",\n          type: \"address\",\n        },\n      ],\n      name: \"getNonces\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"getVersion\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n    },\n  ],\n};\n","export default {\n  abi: [\n    {\n      inputs: [\n        {\n          internalType: \"string\",\n          name: \"_tokenName\",\n          type: \"string\",\n        },\n        {\n          internalType: \"string\",\n          name: \"_tokenSymbol\",\n          type: \"string\",\n        },\n        {\n          internalType: \"address\",\n          name: \"_contractAddr\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"constructor\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"approved\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Approval\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n        {\n          indexed: false,\n          internalType: \"bool\",\n          name: \"approved\",\n          type: \"bool\",\n        },\n      ],\n      name: \"ApprovalForAll\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"string\",\n          name: \"uri\",\n          type: \"string\",\n        },\n        {\n          indexed: false,\n          internalType: \"uint256[]\",\n          name: \"indexes\",\n          type: \"uint256[]\",\n        },\n      ],\n      name: \"TokenGeneration\",\n      type: \"event\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          indexed: true,\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"Transfer\",\n      type: \"event\",\n    },\n    {\n      inputs: [],\n      name: \"DOMAIN_SEPARATOR\",\n      outputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [],\n      name: \"PERMIT_TYPEHASH\",\n      outputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [],\n      name: \"TRANSFER_TYPEHASH\",\n      outputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"approve\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n      ],\n      name: \"balanceOf\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [],\n      name: \"baseURI\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"getApproved\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n      ],\n      name: \"isApprovedForAll\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [],\n      name: \"name\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"ownerOf\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"safeTransferFrom\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"bytes\",\n          name: \"_data\",\n          type: \"bytes\",\n        },\n      ],\n      name: \"safeTransferFrom\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"operator\",\n          type: \"address\",\n        },\n        {\n          internalType: \"bool\",\n          name: \"approved\",\n          type: \"bool\",\n        },\n      ],\n      name: \"setApprovalForAll\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"bytes4\",\n          name: \"interfaceId\",\n          type: \"bytes4\",\n        },\n      ],\n      name: \"supportsInterface\",\n      outputs: [\n        {\n          internalType: \"bool\",\n          name: \"\",\n          type: \"bool\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [],\n      name: \"symbol\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"index\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"tokenByIndex\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"index\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"tokenOfOwnerByIndex\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"tokenURI\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [],\n      name: \"totalSupply\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"contractAddr\",\n          type: \"address\",\n        },\n      ],\n      name: \"initialize\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"quantity\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"string\",\n          name: \"_uri\",\n          type: \"string\",\n        },\n      ],\n      name: \"generateToken\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"from\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"to\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n      ],\n      name: \"transferFrom\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"owner\",\n          type: \"address\",\n        },\n        {\n          internalType: \"address\",\n          name: \"spender\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"tokenId\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint256\",\n          name: \"deadline\",\n          type: \"uint256\",\n        },\n        {\n          internalType: \"uint8\",\n          name: \"v\",\n          type: \"uint8\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"r\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"s\",\n          type: \"bytes32\",\n        },\n      ],\n      name: \"requestPermit\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [],\n      name: \"getVersion\",\n      outputs: [\n        {\n          internalType: \"string\",\n          name: \"\",\n          type: \"string\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [],\n      name: \"getPablockTokenAddress\",\n      outputs: [\n        {\n          internalType: \"address\",\n          name: \"\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"addr\",\n          type: \"address\",\n        },\n      ],\n      name: \"getNonces\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [],\n      name: \"getChainId\",\n      outputs: [\n        {\n          internalType: \"uint256\",\n          name: \"chain\",\n          type: \"uint256\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n  ],\n};\n","export default {\n  abi: [\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"_pablockToken\",\n          type: \"address\",\n        },\n      ],\n      stateMutability: \"nonpayable\",\n      type: \"constructor\",\n    },\n    {\n      anonymous: false,\n      inputs: [\n        {\n          indexed: false,\n          internalType: \"bytes32\",\n          name: \"hash\",\n          type: \"bytes32\",\n        },\n        {\n          indexed: false,\n          internalType: \"string\",\n          name: \"uri\",\n          type: \"string\",\n        },\n        {\n          indexed: false,\n          internalType: \"address\",\n          name: \"applicant\",\n          type: \"address\",\n        },\n      ],\n      name: \"Notarize\",\n      type: \"event\",\n    },\n    {\n      inputs: [],\n      name: \"NOTARIZE_TYPEHASH\",\n      outputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"\",\n          type: \"bytes32\",\n        },\n      ],\n      stateMutability: \"view\",\n      type: \"function\",\n      constant: true,\n    },\n    {\n      inputs: [\n        {\n          internalType: \"address\",\n          name: \"contractAddr\",\n          type: \"address\",\n        },\n      ],\n      name: \"initialize\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n    {\n      inputs: [\n        {\n          internalType: \"bytes32\",\n          name: \"hash\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"string\",\n          name: \"uri\",\n          type: \"string\",\n        },\n        {\n          internalType: \"address\",\n          name: \"applicant\",\n          type: \"address\",\n        },\n        {\n          internalType: \"uint8\",\n          name: \"v\",\n          type: \"uint8\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"r\",\n          type: \"bytes32\",\n        },\n        {\n          internalType: \"bytes32\",\n          name: \"s\",\n          type: \"bytes32\",\n        },\n      ],\n      name: \"notarize\",\n      outputs: [],\n      stateMutability: \"nonpayable\",\n      type: \"function\",\n    },\n  ],\n};\n","export default {\n  ENDPOINT_LOCAL: \"http://127.0.0.1:8082\",\n  ENDPOINT_MUMBAI: \"http://127.0.0.1:8082\",\n  ENDPOINT_POLYGON: \"http://127.0.0.1:8082\",\n\n  CHAIN_ID_LOCAL: 1,\n  CHAIN_ID_MUMBAI: 80001,\n  CHAIN_ID_POLYGON: 137,\n\n  RPC_PROVIDER_LOCAL: \"http://127.0.0.1:7545\",\n  RPC_PROVIDER_MUMBAI:\n    \"https://polygon-mumbai.infura.io/v3/98084ec8ac4d49e181f0ffc83562f6f6\",\n\n  // PABLOCK_TOKEN_ADDRESS_LOCAL: \"0x2b9233683001657161db866c7405493Fc1d1C22d\",\n  // PABLOCK_NFT_ADDRESS_LOCAL: \"0x29f8015263c90a19eB08a354De4Fb97c5A68376F\",\n  // PABLOCK_NOTARIZATION_ADDRESS_LOCAL:\n  //   \"0x44C8cFee4a1dAF6d82E2a07F0ecE0AC365B07A1a\",\n\n  PABLOCK_TOKEN_ADDRESS_LOCAL: \"0x2F73D51b8813775D8CFB2a7147b516CB01EEb4C2\",\n  PABLOCK_NFT_ADDRESS_LOCAL: \"0x383254cBDF631C6611A56502864c3f5D6f56f2A5\",\n  PABLOCK_NOTARIZATION_ADDRESS_LOCAL:\n    \"0x8Dc4E4CBd83e5939EF82f6e2347b7476206610f3\",\n  CUSTOM_TOKEN_ADDRESS_LOCAL: \"0x2f5C8a986f4b1136b50b0F0D7F3fe2cD5046a6c3\",\n\n  PABLOCK_TOKEN_ADDRESS_MUMBAI: \"0x9D0d991c90112C2805F250cD7B5D399c5e834088\",\n\n  PABLOCK_ADDRESS_LOCAL: \"0xfc8CFa30350f7B195f2b5c6F350f76720bfD89f4\",\n};\n","//Libraries\nimport axios from \"axios\";\nimport { ethers, Wallet, BigNumber, ContractInterface } from \"ethers\";\nimport { range } from \"lodash\";\nimport web3Abi from \"web3-eth-abi\";\n\n//Utils\nimport { sign, getPermitDigest, getTransactionData } from \"./common/utils\";\nimport { logger } from \"./common/logger\";\n\n//Constants\nimport { ERROR_TYPE } from \"./common/constants\";\n\n//Abis\nimport CustomERC20 from \"./common/abis/CustomERC20\";\nimport PablockToken from \"./common/abis/PablockToken\";\nimport PablockNFT from \"./common/abis/PablockNFT\";\nimport PablockNotarization from \"./common/abis/PablockNotarization\";\n\n//Config\nimport config from \"./config\";\n\ntype Configuration = {\n  env?: \"LOCAL\" | \"MUMBAI\" | \"POLYGON\";\n  debugMode: boolean | false;\n};\n\ntype SdkOptions = {\n  apiKey: string;\n  authToken?: string;\n  privateKey: string;\n  config?: Configuration;\n};\n\ntype ContractStruct = {\n  address: string;\n  abi: Array<any>;\n  name: string;\n  version: string;\n};\n\nexport class PablockSDK {\n  apiKey?: string;\n  wallet?: Wallet;\n  provider?: any;\n  authToken?: string;\n  env: string;\n\n  constructor(sdkOptions: SdkOptions) {\n    if (!sdkOptions.config?.debugMode) {\n      logger.transports[0].silent = true;\n    }\n\n    this.env = sdkOptions.config?.env || \"MUMBAI\";\n\n    logger.info(`Working environment: ${this.env}`);\n    // logger.info(\"RPC Provider \", config[`RPC_PROVIDER_${this.env}`]);\n\n    if (sdkOptions.apiKey) {\n      this.apiKey = sdkOptions.apiKey;\n    } else if (sdkOptions.authToken) {\n      this.authToken = sdkOptions.authToken;\n    } else {\n      console.error(\n        \"[Error] API key or auth token are required, please insert one!\"\n      );\n      process.exit(1);\n    }\n\n    // this.network = sdkOptions.config?.network || \"MUMBAI\";\n    this.provider = new ethers.providers.JsonRpcProvider(\n      config[`RPC_PROVIDER_${this.env}`]\n    );\n\n    if (sdkOptions.privateKey) {\n      this.wallet = new ethers.Wallet(sdkOptions.privateKey);\n    } else {\n      this.wallet = ethers.Wallet.createRandom();\n    }\n\n    logger.info(\"Finished initialization\");\n  }\n\n  /**\n   * Need to called once after calling constructor\n   */\n  async init() {\n    try {\n      if (this.apiKey) {\n        let { status, data } = await axios.get(\n          `${config[`ENDPOINT_${this.env}`]}/generateJWT/${this.apiKey}/${\n            this.wallet!.address\n          }`\n        );\n        if (status === 200) {\n          // logger.info(\"Auth token received \", data.authToken);\n\n          this.authToken = data.authToken;\n        } else {\n          throw ERROR_TYPE.API_KEY_NOT_AUTHENTICATED;\n        }\n      } else if (this.authToken) {\n        this.checkJWTValidity();\n      }\n    } catch (error) {\n      logger.info(\"[Error] \", error);\n      throw ERROR_TYPE.API_KEY_NOT_AUTHENTICATED;\n    }\n  }\n\n  /**\n   * Return JWT token\n   *\n   * @returns authToken\n   */\n  getAuthToken() {\n    logger.info(`Your auth token is: ${this.authToken}`);\n\n    if (this.authToken) {\n      return this.authToken;\n    } else {\n      console.error(\n        \"[Error] run sdk.init() if you don't already do that, otherwise check if your API key is correct\"\n      );\n      return null;\n    }\n  }\n\n  /**\n   * Return apiKey added in contructor\n   *\n   * @returns apiKey\n   */\n  getApiKey() {\n    logger.info(`Your API key is: ${this.apiKey}`);\n    return this.apiKey;\n  }\n\n  /**\n   * Return address of wallet associated in current instance\n   *\n   * @returns wallet address\n   */\n  getWalletAddress() {\n    return this.wallet!.address;\n  }\n\n  /**\n   * This function helps to check PablockToken (PTK)\n   *\n   * @param address\n   * @returns balance - string\n   */\n  async getPablockTokenBalance(address = this.wallet!.address) {\n    const pablockToken = new ethers.Contract(\n      config[`PABLOCK_TOKEN_ADDRESS_${this.env}`],\n      PablockToken.abi,\n      this.provider\n    );\n\n    const balance = parseInt(\n      ethers.utils.formatEther(await pablockToken.balanceOf(address))\n    );\n\n    logger.info(`User has ${balance} PTK`);\n    return balance;\n  }\n\n  async getTokenBalance(\n    contractAddress = config[`CUSTOM_TOKEN_ADDRESS_${this.env}`],\n    address = this.wallet!.address\n  ) {\n    try {\n      const customToken = new ethers.Contract(\n        contractAddress,\n        CustomERC20.abi,\n        this.provider\n      );\n\n      const balance = parseInt(\n        ethers.utils.formatEther(await customToken.balanceOf(address))\n      );\n\n      logger.info(`User has ${balance} ${await customToken.name()}`);\n      return balance;\n    } catch (err) {\n      logger.error(\"[Pablock API] Custom token balance: \", err);\n      throw ERROR_TYPE.CONTRACT_ERROR;\n    }\n  }\n\n  /**\n   * This function return MATIC balance of the user wallet by default, otherwise, returns\n   * the balance of specified wallet\n   *\n   * @param address\n   * @returns number\n   */\n  async getMaticBalance(address = this.wallet!.address) {\n    const balance = parseInt(\n      (await this.provider.getBalance(address)).toString()\n    );\n\n    logger.info(`User has ${balance} MATIC`);\n    return balance;\n  }\n\n  /**\n   * This function allows the user to set the allowance to a user over his token\n   *\n   * @param contractAddress\n   * @param spender\n   * @param value\n   * @param deadline\n   * @returns transaction data\n   */\n  async sendPermit(\n    contractAddress: string,\n    spender: string,\n    value: number,\n    deadline: number,\n    abi = CustomERC20.abi\n  ) {\n    try {\n      const contract = new ethers.Contract(\n        contractAddress,\n        abi,\n        // this.wallet.connect(this.provider)\n        this.provider\n      );\n\n      console.log(await contract.getVersion());\n\n      const approve = {\n        owner: this.wallet!.address,\n        spender,\n        value,\n      };\n\n      const nonce = parseInt(\n        (await contract.getNonces(approve.owner)).toString()\n      );\n\n      const digest = getPermitDigest(\n        await contract.name(),\n        contract.address,\n        config[`CHAIN_ID_${this.env}`],\n        {\n          approve,\n          nonce,\n          deadline,\n        },\n        \"token\"\n      );\n\n      const { v, r, s } = sign(\n        digest,\n        Buffer.from(this.wallet!.privateKey.substring(2), \"hex\")\n      );\n\n      const tx = await contract.populateTransaction.requestPermit(\n        approve.owner,\n        approve.spender,\n        approve.value,\n        deadline,\n        v,\n        r,\n        s\n      );\n\n      let { status, data } = await axios.post(\n        // `${config[`ENDPOINT_${this.env}`]}/sendToken`,\n        `${config[`ENDPOINT_${this.env}`]}/sendPermit`,\n        { tx, contractAddress, address: this.wallet?.address },\n        {\n          headers: {\n            Authorization: `Bearer ${this.authToken}`,\n          },\n        }\n      );\n\n      return data;\n    } catch (error) {\n      logger.info(\"[Send Permit] \", error);\n    }\n  }\n\n  /**\n   * Request token of contract for user\n   *\n   * @param amount\n   * @param contractAddress\n   * @returns request response\n   */\n  async requestToken(amount: number, contractAddress: string) {\n    logger.info(`Request ${amount} token from ${this.wallet!.address}`);\n\n    let { status, data } = await axios.post(\n      `${config[`ENDPOINT_${this.env}`]}/mintToken`,\n      { contractAddress, to: this.wallet!.address, amount },\n      {\n        headers: {\n          Authorization: `Bearer ${this.authToken}`,\n        },\n      }\n    );\n\n    logger.info(`Request token status: ${status}`);\n\n    return data;\n  }\n\n  /**\n   * Function that allows user to mintNFT from PablockNFT contract or other contract if specified\n   * The specified contract must be Pablock-compatible\n   *\n   * @param amount\n   * @param uri\n   * @param contractAddress\n   * @param webhookUrl\n   * @returns\n   */\n  async mintNFT(\n    amount: number,\n    uri: string,\n    contractAddress = config[`PABLOCK_NFT_ADDRESS_${this.env}`],\n    webhookUrl: string | null\n  ) {\n    console.log(\"CONTRACT ADDRESS ==>\", contractAddress);\n    let { status, data } = await axios.post(\n      `${config[`ENDPOINT_${this.env}`]}/mintNFT`,\n      { to: this.wallet!.address, amount, uri, contractAddress, webhookUrl },\n      {\n        headers: {\n          Authorization: `Bearer ${this.authToken}`,\n        },\n      }\n    );\n\n    logger.info(status, data);\n\n    return data;\n  }\n\n  /**\n   * This function set allowance and permit Pablock Address to transfer the NFT to the set receiver address\n   *\n   * @param to\n   * @param tokenId\n   * @param deadline\n   * @param contractAddress\n   * @returns\n   */\n  async sendNFT(\n    to: string,\n    tokenId: number,\n    deadline: number,\n    contractAddress = config[`PABLOCK_NFT_ADDRESS_${this.env}`]\n  ) {\n    try {\n      const customERC721 = new ethers.Contract(\n        contractAddress,\n        PablockNFT.abi,\n        // this.wallet.connect(this.provider)\n        this.provider\n      );\n\n      const approve = {\n        owner: this.wallet!.address,\n        spender: config[`PABLOCK_ADDRESS_${this.env}`],\n        tokenId,\n      };\n\n      const nonce = parseInt(\n        (await customERC721.getNonces(approve.owner)).toString()\n      );\n\n      const digest = getPermitDigest(\n        await customERC721.name(),\n        customERC721.address,\n        config[`CHAIN_ID_${this.env}`],\n        {\n          approve,\n          nonce,\n          deadline,\n        },\n        \"nft\"\n      );\n\n      const { v, r, s } = sign(\n        digest,\n        Buffer.from(this.wallet!.privateKey.substring(2), \"hex\")\n      );\n\n      const tx = await customERC721.populateTransaction.requestPermit(\n        approve.owner,\n        approve.spender,\n        approve.tokenId,\n        deadline,\n        v,\n        r,\n        s\n      );\n\n      let { status, data } = await axios.post(\n        `${config[`ENDPOINT_${this.env}`]}/transferNFT`,\n        { tx, to, tokenId, contractAddress },\n        {\n          headers: {\n            Authorization: `Bearer ${this.authToken}`,\n          },\n        }\n      );\n      return data;\n    } catch (err) {\n      logger.error(`NFTTransfer error: ${err} `);\n      return null;\n    }\n  }\n\n  async executeNotarization(\n    hash: string,\n    uri: string,\n    deadline = 1657121546000,\n    metadata: object | null,\n    webhookUrl: string | null,\n    secret: string | null\n  ) {\n    try {\n      const pablockNotarization = new ethers.Contract(\n        config[`PABLOCK_NOTARIZATION_ADDRESS_${this.env}`],\n        PablockNotarization.abi,\n        // this.wallet.connect(this.provider)\n        this.provider\n      );\n\n      const permit = await this.sendPermit(\n        config[`PABLOCK_TOKEN_ADDRESS_${this.env}`],\n        config[`PABLOCK_ADDRESS_${this.env}`],\n        1,\n        deadline,\n        PablockToken.abi\n      );\n\n      const digest = getPermitDigest(\n        \"notarization\",\n        pablockNotarization.address,\n        config[`CHAIN_ID_${this.env}`],\n        { hash, uri, applicant: this.wallet!.address },\n        \"notarization\"\n      );\n\n      console.log(\"DIGEST ==>\", digest);\n\n      const { v, r, s } = sign(\n        digest,\n        Buffer.from(this.wallet!.privateKey.substring(2), \"hex\")\n      );\n\n      const tx = await pablockNotarization.populateTransaction.notarize(\n        hash,\n        uri,\n        this.wallet!.address,\n        v,\n        r,\n        s\n      );\n\n      let { status, data } = await axios.post(\n        `${config[`ENDPOINT_${this.env}`]}/sendTransaction`,\n        { tx, from: this.wallet!.address },\n        {\n          headers: {\n            Authorization: `Bearer ${this.authToken}`,\n          },\n        }\n      );\n      return data;\n    } catch (err) {\n      logger.error(`Notarization error: ${err} `);\n      return null;\n    }\n  }\n\n  async prepareTransaction(\n    contractObj: ContractStruct,\n    functionName: string,\n    params = []\n  ) {\n    let contract = new ethers.Contract(\n      contractObj.address,\n      contractObj.abi,\n      this.wallet\n    );\n\n    let functionSignature = web3Abi.encodeFunctionCall(\n      contractObj.abi.find(\n        (el) => el.type === \"function\" && el.name === functionName\n      ),\n      params\n    );\n\n    const { data } = await axios.get(`/getNonce/${this.wallet!.address}`, {\n      headers: { Authorization: `Bearer ${this.authToken}` },\n    });\n\n    let { r, s, v } = await getTransactionData(\n      data.nonce,\n      functionSignature,\n      this.wallet!.address,\n      this.wallet!.privateKey,\n      {\n        name: contractObj.name,\n        version: contractObj.version,\n        address: contractObj.address,\n      }\n    );\n\n    return {\n      contractAddress: contractObj.address,\n      userAddress: this.wallet!.address,\n      functionSignature,\n      r,\n      s,\n      v,\n    };\n  }\n\n  /**\n   * This functions outputs the NFT tokens, owned by the user, of the contract addresses given through the input\n   *\n   * @param contractAddresses\n   * @param ownerAddress\n   * @returns Object with contract addresses as keys and NFT arrays as value\n   */\n  async getOwnedNFT(\n    contractAddresses: string[],\n    ownerAddress = this.wallet!.address\n  ) {\n    let tokenOfOwner = {};\n\n    for (const addr of contractAddresses) {\n      let contract = new ethers.Contract(\n        addr,\n        PablockNFT.abi,\n        this.wallet!.connect(this.provider)\n      );\n\n      let balance = await contract.balanceOf(ownerAddress);\n\n      logger.info(`User has ${balance} NFTs in ${addr} contract`);\n      let tokenIds = [];\n      for (const i of range(balance)) {\n        const tokenId = await contract.tokenOfOwnerByIndex(ownerAddress, i);\n\n        logger.info(`Token: ${await contract.baseURI()}`);\n\n        // tokenOfOwner[addr] = parseInt(tokenId.values.toString());\n        tokenIds.push({\n          tokenId: tokenId.toString(),\n          tokenURI: await contract.tokenURI(tokenId.toString()),\n        });\n      }\n\n      tokenOfOwner[addr] = tokenIds;\n      // logger.info(`User own from ${addr}: ${tokenOfOwner[addr]}`);\n    }\n\n    return tokenOfOwner;\n  }\n\n  /**\n   * Check if JWT Token is still valid\n   *\n   * @returns boolean\n   */\n  async checkJWTValidity() {\n    try {\n      let { status, data } = await axios.get(\n        `${config[`ENDPOINT_${this.env}`]}/checkJWT`,\n        {\n          headers: {\n            Authorization: `Bearer ${this.authToken}`,\n          },\n        }\n      );\n\n      logger.info(status, data);\n\n      return data;\n    } catch (error) {\n      throw ERROR_TYPE.UNABLE_TO_CHECK_TOKEN;\n    }\n  }\n\n  async generateSubJWT(address: string) {\n    try {\n      let { status, data } = await axios.get(\n        `${config[`ENDPOINT_${this.env}`]}/generateSubJWT/${address}`,\n        {\n          headers: {\n            // Authorization: `Bearer ${this.authToken}`,\n            Authorization:\n              \"Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcGlLZXkiOiJhcGlfdGVzdCIsImFkZHJlc3MiOiJ1bmRlZmluZWQiLCJzdWJUb2tlbiI6dHJ1ZSwiaWF0IjoxNjMzNjg0NTk4fQ.UQEZ-IHNXNKwYO6Q7xRs_MrUGA37T-fG4QD3nTQwPJuA5emPNuE52X-RVJdSOcRiQWnTrgqm9q2EDZoM4ukuoQ\",\n          },\n        }\n      );\n\n      console.log(data);\n      logger.info(`SubJWT: ${data.authToken}`);\n\n      return data.authToken;\n    } catch (error) {\n      throw ERROR_TYPE.UNABLE_TO_GENERATE_SUB_JWT;\n    }\n  }\n\n  /**\n   * Return API version\n   *\n   * @returns string\n   */\n  async getAPIVersion() {\n    let { data } = await axios.get(\n      `${config[`ENDPOINT_${this.env}`]}/getVersion`\n    );\n    return data;\n  }\n}\n"],"names":["ethers","axios","web3Abi","range"],"mappings":";;;;;;;;;;;;;;AAAA,MAAM;AAAA,EACJ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,IACE,QAAQ;AACZ,MAAM,EAAE,WAAW,QAAQ;AAE3B,MAAM,cAAc;AAAA,EAClB,OAAO;AAAA,IACL,UAAU,UACR,YACE;AAAA,IAGJ,YAAY;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,IAEF,QAAQ,CAAC,SAAS,WAAW,SAAS,SAAS;AAAA;AAAA,EAEjD,KAAK;AAAA,IACH,UAAU,UACR,YACE;AAAA,IAGJ,YAAY;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,IAEF,QAAQ,CAAC,SAAS,WAAW,WAAW,SAAS;AAAA;AAAA,EAEnD,cAAc;AAAA,IACZ,UAAU,UACR,YACE;AAAA,IAGJ,YAAY,CAAC,WAAW,WAAW,UAAU;AAAA,IAC7C,QAAQ,CAAC,QAAQ,OAAO;AAAA;AAAA;MAIf,OAAO,CAAC,QAAgB,eAAuB;AAC1D,SAAO,OAAO,OAAO,KAAK,OAAO,MAAM,IAAI,QAAQ;AAAA;yBAsBnD,MACA,SACA,SACA,MACA,cACA;AAGA,QAAM,aAAa,YAAY;AAE/B,UAAQ,IACN,cACA,WAAW,OAAO,IAAI,CAAC,OAAO,KAAK,OAAO,KAAK,UAAU;AAG3D,SAAO,UACL,aACE,CAAC,UAAU,UAAU,WAAW,YAChC;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA,UACE,gBAAgB,OAAO,WAAW,YAAY;AAAA,MAC5C,WAAW;AAAA,MACX,GAAG,WAAW,OAAO,IAAI,CAAC,OAAO,KAAK,OAAO,KAAK,UAAU;AAAA;AAAA;AAAA;kCAiCtE,MACA,SACA,iBACA,SACA;AACA,SAAO,UACL,gBAAgB,OACd,CAAC,WAAW,WAAW,WAAW,WAAW,YAC7C;AAAA,IACE,UACE,YACE;AAAA,IAGJ,UAAU,YAAY;AAAA,IACtB,UAAU,YAAY;AAAA,IACtB;AAAA,IACA;AAAA;AAAA;kCAON,OACA,mBACA,WACA,YACA,UACA;AACA,QAAM,SAAS,UACb,aACE,CAAC,UAAU,UAAU,WAAW,YAChC;AAAA,IACE;AAAA,IACA;AAAA,IACA,mBACE,SAAS,MACT,SAAS,SACT,SAAS,SACT;AAAA,IAEF,UACE,gBAAgB,OACd,CAAC,WAAW,WAAW,YACvB;AAAA,MACE;AAAA,MACA;AAAA,MACA,UACE,OAAO,KAAK,kBAAkB,QAAQ,MAAM,KAAK;AAAA;AAAA;AAS/D,QAAM,YAAY,KAChB,QACA,OAAO,KAAK,WAAW,QAAQ,MAAM,KAAK;AAG5C,SAAO;AAAA;;AClMT,MAAM,EAAE,cAAc,QAAQ,eAAe,QAAQ;AAKrD,MAAM,YAAY,OAAO,QACvB,OAAO,aACP,OAAO,OAAO,CAAC,EAAE,OAAO,SAAS,gBAAgB;AAE/C,SAAO,IAAI,YAAY;AAAA;MAOd,SAAS,aAAa;AAAA,EACjC,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,YAAY;AAAA,IAOV,IAAI,WAAW;AAAA;AAAA;;MC5BN,aAAa;AAAA,EACxB,gBAAgB;AAAA,EAChB,2BAA2B;AAAA,EAC3B,gBAAgB;AAAA,EAChB,4BAA4B;AAAA,EAC5B,uBAAuB;AAAA;;ACLzB,kBAAe;AAAA,EACb,KAAK;AAAA,IACH;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,WAAW;AAAA,MACX,QAAQ;AAAA,QACN;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,IAER;AAAA,MACE,WAAW;AAAA,MACX,QAAQ;AAAA,QACN;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA;AAAA;;ACrkBZ,mBAAe;AAAA,EACb,KAAK;AAAA,IACH;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,WAAW;AAAA,MACX,QAAQ;AAAA,QACN;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,IAER;AAAA,MACE,WAAW;AAAA,MACX,QAAQ;AAAA,QACN;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA;AAAA;;ACzeZ,iBAAe;AAAA,EACb,KAAK;AAAA,IACH;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,WAAW;AAAA,MACX,QAAQ;AAAA,QACN;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,IAER;AAAA,MACE,WAAW;AAAA,MACX,QAAQ;AAAA,QACN;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,IAER;AAAA,MACE,WAAW;AAAA,MACX,QAAQ;AAAA,QACN;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,IAER;AAAA,MACE,WAAW;AAAA,MACX,QAAQ;AAAA,QACN;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA,MACN,UAAU;AAAA;AAAA;AAAA;;AChoBhB,0BAAe;AAAA,EACb,KAAK;AAAA,IACH;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,WAAW;AAAA,MACX,QAAQ;AAAA,QACN;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,SAAS;AAAA,UACT,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS;AAAA,QACP;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,iBAAiB;AAAA,MACjB,MAAM;AAAA,MACN,UAAU;AAAA;AAAA,IAEZ;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA,IAER;AAAA,MACE,QAAQ;AAAA,QACN;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA,QAER;AAAA,UACE,cAAc;AAAA,UACd,MAAM;AAAA,UACN,MAAM;AAAA;AAAA;AAAA,MAGV,MAAM;AAAA,MACN,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,MAAM;AAAA;AAAA;AAAA;;ACrGZ,aAAe;AAAA,EACb,gBAAgB;AAAA,EAChB,iBAAiB;AAAA,EACjB,kBAAkB;AAAA,EAElB,gBAAgB;AAAA,EAChB,iBAAiB;AAAA,EACjB,kBAAkB;AAAA,EAElB,oBAAoB;AAAA,EACpB,qBACE;AAAA,EAOF,6BAA6B;AAAA,EAC7B,2BAA2B;AAAA,EAC3B,oCACE;AAAA,EACF,4BAA4B;AAAA,EAE5B,8BAA8B;AAAA,EAE9B,uBAAuB;AAAA;;iBCeD;AAAA,EAOtB,YAAY,YAAwB;AAClC,QAAI,CAAC,WAAW,QAAQ,WAAW;AACjC,aAAO,WAAW,GAAG,SAAS;AAAA;AAGhC,SAAK,MAAM,WAAW,QAAQ,OAAO;AAErC,WAAO,KAAK,wBAAwB,KAAK;AAGzC,QAAI,WAAW,QAAQ;AACrB,WAAK,SAAS,WAAW;AAAA,eAChB,WAAW,WAAW;AAC/B,WAAK,YAAY,WAAW;AAAA,WACvB;AACL,cAAQ,MACN;AAEF,cAAQ,KAAK;AAAA;AAIf,SAAK,WAAW,IAAIA,cAAO,UAAU,gBACnC,OAAO,gBAAgB,KAAK;AAG9B,QAAI,WAAW,YAAY;AACzB,WAAK,SAAS,IAAIA,cAAO,OAAO,WAAW;AAAA,WACtC;AACL,WAAK,SAASA,cAAO,OAAO;AAAA;AAG9B,WAAO,KAAK;AAAA;AAAA,QAMR,OAAO;AACX,QAAI;AACF,UAAI,KAAK,QAAQ;AACf,YAAI,EAAE,QAAQ,SAAS,MAAMC,0BAAM,IACjC,GAAG,OAAO,YAAY,KAAK,sBAAsB,KAAK,UACpD,KAAK,OAAQ;AAGjB,YAAI,WAAW,KAAK;AAGlB,eAAK,YAAY,KAAK;AAAA,eACjB;AACL,gBAAM,WAAW;AAAA;AAAA,iBAEV,KAAK,WAAW;AACzB,aAAK;AAAA;AAAA,aAEA,OAAP;AACA,aAAO,KAAK,YAAY;AACxB,YAAM,WAAW;AAAA;AAAA;AAAA,EASrB,eAAe;AACb,WAAO,KAAK,uBAAuB,KAAK;AAExC,QAAI,KAAK,WAAW;AAClB,aAAO,KAAK;AAAA,WACP;AACL,cAAQ,MACN;AAEF,aAAO;AAAA;AAAA;AAAA,EASX,YAAY;AACV,WAAO,KAAK,oBAAoB,KAAK;AACrC,WAAO,KAAK;AAAA;AAAA,EAQd,mBAAmB;AACjB,WAAO,KAAK,OAAQ;AAAA;AAAA,QAShB,uBAAuB,UAAU,KAAK,OAAQ,SAAS;AAC3D,UAAM,eAAe,IAAID,cAAO,SAC9B,OAAO,yBAAyB,KAAK,QACrC,aAAa,KACb,KAAK;AAGP,UAAM,UAAU,SACdA,cAAO,MAAM,YAAY,MAAM,aAAa,UAAU;AAGxD,WAAO,KAAK,YAAY;AACxB,WAAO;AAAA;AAAA,QAGH,gBACJ,kBAAkB,OAAO,wBAAwB,KAAK,QACtD,UAAU,KAAK,OAAQ,SACvB;AACA,QAAI;AACF,YAAM,cAAc,IAAIA,cAAO,SAC7B,iBACA,YAAY,KACZ,KAAK;AAGP,YAAM,UAAU,SACdA,cAAO,MAAM,YAAY,MAAM,YAAY,UAAU;AAGvD,aAAO,KAAK,YAAY,WAAW,MAAM,YAAY;AACrD,aAAO;AAAA,aACA,KAAP;AACA,aAAO,MAAM,wCAAwC;AACrD,YAAM,WAAW;AAAA;AAAA;AAAA,QAWf,gBAAgB,UAAU,KAAK,OAAQ,SAAS;AACpD,UAAM,UAAU,SACb,OAAM,KAAK,SAAS,WAAW,UAAU;AAG5C,WAAO,KAAK,YAAY;AACxB,WAAO;AAAA;AAAA,QAYH,WACJ,iBACA,SACA,OACA,UACA,MAAM,YAAY,KAClB;AACA,QAAI;AACF,YAAM,WAAW,IAAIA,cAAO,SAC1B,iBACA,KAEA,KAAK;AAGP,cAAQ,IAAI,MAAM,SAAS;AAE3B,YAAM,UAAU;AAAA,QACd,OAAO,KAAK,OAAQ;AAAA,QACpB;AAAA,QACA;AAAA;AAGF,YAAM,QAAQ,SACX,OAAM,SAAS,UAAU,QAAQ,QAAQ;AAG5C,YAAM,SAAS,gBACb,MAAM,SAAS,QACf,SAAS,SACT,OAAO,YAAY,KAAK,QACxB;AAAA,QACE;AAAA,QACA;AAAA,QACA;AAAA,SAEF;AAGF,YAAM,EAAE,GAAG,GAAG,MAAM,KAClB,QACA,OAAO,KAAK,KAAK,OAAQ,WAAW,UAAU,IAAI;AAGpD,YAAM,KAAK,MAAM,SAAS,oBAAoB,cAC5C,QAAQ,OACR,QAAQ,SACR,QAAQ,OACR,UACA,GACA,GACA;AAGF,UAAI,EAAE,QAAQ,SAAS,MAAMC,0BAAM,KAEjC,GAAG,OAAO,YAAY,KAAK,qBAC3B,EAAE,IAAI,iBAAiB,SAAS,KAAK,QAAQ,WAC7C;AAAA,QACE,SAAS;AAAA,UACP,eAAe,UAAU,KAAK;AAAA;AAAA;AAKpC,aAAO;AAAA,aACA,OAAP;AACA,aAAO,KAAK,kBAAkB;AAAA;AAAA;AAAA,QAW5B,aAAa,QAAgB,iBAAyB;AAC1D,WAAO,KAAK,WAAW,qBAAqB,KAAK,OAAQ;AAEzD,QAAI,EAAE,QAAQ,SAAS,MAAMA,0BAAM,KACjC,GAAG,OAAO,YAAY,KAAK,oBAC3B,EAAE,iBAAiB,IAAI,KAAK,OAAQ,SAAS,UAC7C;AAAA,MACE,SAAS;AAAA,QACP,eAAe,UAAU,KAAK;AAAA;AAAA;AAKpC,WAAO,KAAK,yBAAyB;AAErC,WAAO;AAAA;AAAA,QAaH,QACJ,QACA,KACA,kBAAkB,OAAO,uBAAuB,KAAK,QACrD,YACA;AACA,YAAQ,IAAI,wBAAwB;AACpC,QAAI,EAAE,QAAQ,SAAS,MAAMA,0BAAM,KACjC,GAAG,OAAO,YAAY,KAAK,kBAC3B,EAAE,IAAI,KAAK,OAAQ,SAAS,QAAQ,KAAK,iBAAiB,cAC1D;AAAA,MACE,SAAS;AAAA,QACP,eAAe,UAAU,KAAK;AAAA;AAAA;AAKpC,WAAO,KAAK,QAAQ;AAEpB,WAAO;AAAA;AAAA,QAYH,QACJ,IACA,SACA,UACA,kBAAkB,OAAO,uBAAuB,KAAK,QACrD;AACA,QAAI;AACF,YAAM,eAAe,IAAID,cAAO,SAC9B,iBACA,WAAW,KAEX,KAAK;AAGP,YAAM,UAAU;AAAA,QACd,OAAO,KAAK,OAAQ;AAAA,QACpB,SAAS,OAAO,mBAAmB,KAAK;AAAA,QACxC;AAAA;AAGF,YAAM,QAAQ,SACX,OAAM,aAAa,UAAU,QAAQ,QAAQ;AAGhD,YAAM,SAAS,gBACb,MAAM,aAAa,QACnB,aAAa,SACb,OAAO,YAAY,KAAK,QACxB;AAAA,QACE;AAAA,QACA;AAAA,QACA;AAAA,SAEF;AAGF,YAAM,EAAE,GAAG,GAAG,MAAM,KAClB,QACA,OAAO,KAAK,KAAK,OAAQ,WAAW,UAAU,IAAI;AAGpD,YAAM,KAAK,MAAM,aAAa,oBAAoB,cAChD,QAAQ,OACR,QAAQ,SACR,QAAQ,SACR,UACA,GACA,GACA;AAGF,UAAI,EAAE,QAAQ,SAAS,MAAMC,0BAAM,KACjC,GAAG,OAAO,YAAY,KAAK,sBAC3B,EAAE,IAAI,IAAI,SAAS,mBACnB;AAAA,QACE,SAAS;AAAA,UACP,eAAe,UAAU,KAAK;AAAA;AAAA;AAIpC,aAAO;AAAA,aACA,KAAP;AACA,aAAO,MAAM,sBAAsB;AACnC,aAAO;AAAA;AAAA;AAAA,QAIL,oBACJ,MACA,KACA,WAAW,cACX,UACA,YACA,QACA;AACA,QAAI;AACF,YAAM,sBAAsB,IAAID,cAAO,SACrC,OAAO,gCAAgC,KAAK,QAC5C,oBAAoB,KAEpB,KAAK;AAGP,YAAM,SAAS,MAAM,KAAK,WACxB,OAAO,yBAAyB,KAAK,QACrC,OAAO,mBAAmB,KAAK,QAC/B,GACA,UACA,aAAa;AAGf,YAAM,SAAS,gBACb,gBACA,oBAAoB,SACpB,OAAO,YAAY,KAAK,QACxB,EAAE,MAAM,KAAK,WAAW,KAAK,OAAQ,WACrC;AAGF,cAAQ,IAAI,cAAc;AAE1B,YAAM,EAAE,GAAG,GAAG,MAAM,KAClB,QACA,OAAO,KAAK,KAAK,OAAQ,WAAW,UAAU,IAAI;AAGpD,YAAM,KAAK,MAAM,oBAAoB,oBAAoB,SACvD,MACA,KACA,KAAK,OAAQ,SACb,GACA,GACA;AAGF,UAAI,EAAE,QAAQ,SAAS,MAAMC,0BAAM,KACjC,GAAG,OAAO,YAAY,KAAK,0BAC3B,EAAE,IAAI,MAAM,KAAK,OAAQ,WACzB;AAAA,QACE,SAAS;AAAA,UACP,eAAe,UAAU,KAAK;AAAA;AAAA;AAIpC,aAAO;AAAA,aACA,KAAP;AACA,aAAO,MAAM,uBAAuB;AACpC,aAAO;AAAA;AAAA;AAAA,QAIL,mBACJ,aACA,cACA,SAAS,IACT;AACA,IAAe,IAAID,cAAO,SACxB,YAAY,SACZ,YAAY,KACZ,KAAK;AAGP,QAAI,oBAAoBE,4BAAQ,mBAC9B,YAAY,IAAI,KACd,CAAC,OAAO,GAAG,SAAS,cAAc,GAAG,SAAS,eAEhD;AAGF,UAAM,EAAE,SAAS,MAAMD,0BAAM,IAAI,aAAa,KAAK,OAAQ,WAAW;AAAA,MACpE,SAAS,EAAE,eAAe,UAAU,KAAK;AAAA;AAG3C,QAAI,EAAE,GAAG,GAAG,MAAM,MAAM,mBACtB,KAAK,OACL,mBACA,KAAK,OAAQ,SACb,KAAK,OAAQ,YACb;AAAA,MACE,MAAM,YAAY;AAAA,MAClB,SAAS,YAAY;AAAA,MACrB,SAAS,YAAY;AAAA;AAIzB,WAAO;AAAA,MACL,iBAAiB,YAAY;AAAA,MAC7B,aAAa,KAAK,OAAQ;AAAA,MAC1B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAAA,QAWE,YACJ,mBACA,eAAe,KAAK,OAAQ,SAC5B;AACA,QAAI,eAAe;AAEnB,eAAW,QAAQ,mBAAmB;AACpC,UAAI,WAAW,IAAID,cAAO,SACxB,MACA,WAAW,KACX,KAAK,OAAQ,QAAQ,KAAK;AAG5B,UAAI,UAAU,MAAM,SAAS,UAAU;AAEvC,aAAO,KAAK,YAAY,mBAAmB;AAC3C,UAAI,WAAW;AACf,iBAAW,KAAKG,aAAM,UAAU;AAC9B,cAAM,UAAU,MAAM,SAAS,oBAAoB,cAAc;AAEjE,eAAO,KAAK,UAAU,MAAM,SAAS;AAGrC,iBAAS,KAAK;AAAA,UACZ,SAAS,QAAQ;AAAA,UACjB,UAAU,MAAM,SAAS,SAAS,QAAQ;AAAA;AAAA;AAI9C,mBAAa,QAAQ;AAAA;AAIvB,WAAO;AAAA;AAAA,QAQH,mBAAmB;AACvB,QAAI;AACF,UAAI,EAAE,QAAQ,SAAS,MAAMF,0BAAM,IACjC,GAAG,OAAO,YAAY,KAAK,mBAC3B;AAAA,QACE,SAAS;AAAA,UACP,eAAe,UAAU,KAAK;AAAA;AAAA;AAKpC,aAAO,KAAK,QAAQ;AAEpB,aAAO;AAAA,aACA,OAAP;AACA,YAAM,WAAW;AAAA;AAAA;AAAA,QAIf,eAAe,SAAiB;AACpC,QAAI;AACF,UAAI,EAAE,QAAQ,SAAS,MAAMA,0BAAM,IACjC,GAAG,OAAO,YAAY,KAAK,yBAAyB,WACpD;AAAA,QACE,SAAS;AAAA,UAEP,eACE;AAAA;AAAA;AAKR,cAAQ,IAAI;AACZ,aAAO,KAAK,WAAW,KAAK;AAE5B,aAAO,KAAK;AAAA,aACL,OAAP;AACA,YAAM,WAAW;AAAA;AAAA;AAAA,QASf,gBAAgB;AACpB,QAAI,EAAE,SAAS,MAAMA,0BAAM,IACzB,GAAG,OAAO,YAAY,KAAK;AAE7B,WAAO;AAAA;AAAA;;;;"}